{
  "api/index.html": {
    "href": "api/index.html",
    "title": "English | NuGet importer for Unity documentation",
    "keywords": "English API Documentation kumaS.NuGetImporter.Editor.dll The editor extension part of this package. namespace kumaS.NuGetImporter.Editor Code for logic, UI, etc. namespace kumaS.NuGetImporter.Editor.PackageOperation Code to operate packages. namespace kumaS.NuGetImporter.Editor.DataClasses The structure of the data returned by the API, and the code for its util methods. kumaS.NuGetImporter.Editor.Test.dll namespace kumaS.NuGetImporter.Editor.Test Test code. kumaS.NuGetImporter.Editor.Setup.dll namespace kumaS.NuGetImporter.Editor.Setup Code for preparing this extensions. 日本語 API ドキュメント このパッケージの構成についてここに記します。 kumaS.NuGetImporter.Editor.dll このパッケージのエディタ拡張部分。 namespace kumaS.NuGetImporter.Editor ロジックやUI等のコード。 namespace kumaS.NuGetImporter.Editor.PackageOperation パッケージの操作を行うコード。 namespace kumaS.NuGetImporter.Editor.DataClasses API等で返ってくるデータの構造や、その便利メソッドのコード。 kumaS.NuGetImporter.Editor.Test.dll namespace kumaS.NuGetImporter.Editor.Test テストコード。 kumaS.NuGetImporter.Editor.Setup.dll namespace kumaS.NuGetImporter.Editor.Setup 拡張機能の準備部分。"
  },
  "api/kumaS.NuGetImporter.Editor.AsmdefController.html": {
    "href": "api/kumaS.NuGetImporter.Editor.AsmdefController.html",
    "title": "Class AsmdefController | NuGet importer for Unity documentation",
    "keywords": "Class AsmdefController Inheritance Object AsmdefController Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax static class AsmdefController Methods CreateAsmdef(IList<Package>, PackagePathSolverBase) Declaration static async Task CreateAsmdef(IList<Package> packages, PackagePathSolverBase pathResolver) Parameters Type Name Description IList<Package> packages PackagePathSolverBase pathResolver Returns Type Description Task Delete(String) Declaration static void Delete(string path) Parameters Type Name Description String path DeleteAsmdef(IList<Package>, PackagePathSolverBase) Declaration static async Task DeleteAsmdef(IList<Package> packages, PackagePathSolverBase pathResolver) Parameters Type Name Description IList<Package> packages PackagePathSolverBase pathResolver Returns Type Description Task UpdateAnalyzer(Package, String) Declaration static void UpdateAnalyzer(Package package, string path) Parameters Type Name Description Package package String path UpdateAsmdef(IList<Package>, PackagePathSolverBase) Declaration static async Task UpdateAsmdef(IList<Package> packages, PackagePathSolverBase pathResolver) Parameters Type Name Description IList<Package> packages PackagePathSolverBase pathResolver Returns Type Description Task"
  },
  "api/kumaS.NuGetImporter.Editor.AssemblyDefinitionFile.html": {
    "href": "api/kumaS.NuGetImporter.Editor.AssemblyDefinitionFile.html",
    "title": "Class AssemblyDefinitionFile | NuGet importer for Unity documentation",
    "keywords": "Class AssemblyDefinitionFile Assembly definition file. Inheritance object AssemblyDefinitionFile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class AssemblyDefinitionFile Fields | Edit this page View Source allowUnsafeCode Declaration public bool allowUnsafeCode Field Value Type Description bool | Edit this page View Source autoReferenced Declaration public bool autoReferenced Field Value Type Description bool | Edit this page View Source defineConstraints Declaration public List<string> defineConstraints Field Value Type Description List<string> | Edit this page View Source excludePlatforms Declaration public List<string> excludePlatforms Field Value Type Description List<string> | Edit this page View Source includePlatforms Declaration public List<string> includePlatforms Field Value Type Description List<string> | Edit this page View Source name Declaration public string name Field Value Type Description string | Edit this page View Source noEngineReferences Declaration public bool noEngineReferences Field Value Type Description bool | Edit this page View Source overrideReferences Declaration public bool overrideReferences Field Value Type Description bool | Edit this page View Source precompiledReferences Declaration public List<string> precompiledReferences Field Value Type Description List<string> | Edit this page View Source references Declaration public List<string> references Field Value Type Description List<string> | Edit this page View Source rootNamespace Declaration public string rootNamespace Field Value Type Description string | Edit this page View Source versionDefines Declaration public List<VersionDefine> versionDefines Field Value Type Description List<VersionDefine>"
  },
  "api/kumaS.NuGetImporter.Editor.AssetPathSolver.html": {
    "href": "api/kumaS.NuGetImporter.Editor.AssetPathSolver.html",
    "title": "Class AssetPathSolver | NuGet importer for Unity documentation",
    "keywords": "Class AssetPathSolver Class for resolving the path of packages to be installed in Assets. Assetsにインストールするパッケージのパスを解決するためのクラス。 Inheritance Object PackagePathSolverBase AssetPathSolver Inherited Members PackagePathSolverBase.AnalyzerPath(Package) PackagePathSolverBase.AnalyzerPath(String, String) PackagePathSolverBase.AnalyzerPathInternal(String) PackagePathSolverBase.LibraryPath(Package) PackagePathSolverBase.LibraryPath(String, String) PackagePathSolverBase.LibraryPathInternal(String) PackagePathSolverBase.UnityEditorPath(Package) PackagePathSolverBase.UnityEditorPath(String, String) PackagePathSolverBase.UnityEditorPathInternal(String) Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax class AssetPathSolver : PackagePathSolverBase Methods InstallPath(Package) Get the path to the installation location. インストール先のパスを取得。 Declaration override async Task<string> InstallPath(Package package) Parameters Type Name Description Package package Target package. 対象のパッケージ。 Returns Type Description Task<String> Path. パス。 Overrides PackagePathSolverBase.InstallPath(Package) InstallPath(String, String) Get the path to the installation location. インストール先のパスを取得。 Declaration override async Task<string> InstallPath(string packageName, string version) Parameters Type Name Description String packageName Target package name. 対象のパッケージ名。 String version Target package version. 対象のパッケージバージョン。 Returns Type Description Task<String> Path. パス。 Overrides PackagePathSolverBase.InstallPath(String, String)"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.APIList.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.APIList.html",
    "title": "Class APIList | NuGet importer for Unity documentation",
    "keywords": "Class APIList List of available API 利用可能なAPIの一覧 Inheritance object APIList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class APIList Fields | Edit this page View Source resources Declaration public Resource[] resources Field Value Type Description Resource[] Infomation of API API情報 | Edit this page View Source version Declaration public string version Field Value Type Description string"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.ArchitectureType.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.ArchitectureType.html",
    "title": "Enum ArchitectureType | NuGet importer for Unity documentation",
    "keywords": "Enum ArchitectureType Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax public enum ArchitectureType Fields Name Description ARM ARM64 X64 X86"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Author.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Author.html",
    "title": "Class Author | NuGet importer for Unity documentation",
    "keywords": "Class Author Data about author. 作者のデータ。 Inheritance object Author Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Author Fields | Edit this page View Source email Declaration public string email Field Value Type Description string | Edit this page View Source name Declaration public string name Field Value Type Description string | Edit this page View Source url Declaration public string url Field Value Type Description string"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Catalog.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Catalog.html",
    "title": "Class Catalog | NuGet importer for Unity documentation",
    "keywords": "Class Catalog Catalog of package. パッケージのカタログ。 Inheritance object Catalog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Catalog Fields | Edit this page View Source commitId Declaration public string commitId Field Value Type Description string | Edit this page View Source commitTimeStamp Declaration public string commitTimeStamp Field Value Type Description string | Edit this page View Source count Declaration public int count Field Value Type Description int | Edit this page View Source icon Declaration [NonSerialized] public Texture2D icon Field Value Type Description Texture2D | Edit this page View Source items Declaration public Item[] items Field Value Type Description Item[] CatalogEntrys CatalogEntryがこの中に入っている。 | Edit this page View Source nuget_id Declaration public string nuget_id Field Value Type Description string | Edit this page View Source nuget_type Declaration public string[] nuget_type Field Value Type Description string[] Methods | Edit this page View Source GetAllCatalogEntry() Get all catalogEntry. 全てのcatalogEntryを取得する。 Declaration public Catalogentry[] GetAllCatalogEntry() Returns Type Description Catalogentry[] catalogEntrys | Edit this page View Source GetAllVersion() Get all versions of catalog. 全てのバージョンを取得する。 Declaration public List<string> GetAllVersion() Returns Type Description List<string> versions Extension Methods PackageDataExtensionToGUI.GetIcon(Catalog, string)"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Catalogentry.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Catalogentry.html",
    "title": "Class Catalogentry | NuGet importer for Unity documentation",
    "keywords": "Class Catalogentry Infomation of package. パッケージのバージョンごとの情報。 Inheritance object Catalogentry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Catalogentry Fields | Edit this page View Source authors Declaration public string authors Field Value Type Description string | Edit this page View Source dependencyGroups Declaration public Dependencygroup[] dependencyGroups Field Value Type Description Dependencygroup[] | Edit this page View Source description Declaration public string description Field Value Type Description string | Edit this page View Source iconUrl Declaration public string iconUrl Field Value Type Description string | Edit this page View Source id Declaration public string id Field Value Type Description string | Edit this page View Source language Declaration public string language Field Value Type Description string | Edit this page View Source licenseExpression Declaration public string licenseExpression Field Value Type Description string | Edit this page View Source licenseUrl Declaration public string licenseUrl Field Value Type Description string | Edit this page View Source listed Declaration public bool listed Field Value Type Description bool | Edit this page View Source minClientVersion Declaration public string minClientVersion Field Value Type Description string | Edit this page View Source nuget_id Declaration public string nuget_id Field Value Type Description string | Edit this page View Source nuget_type Declaration public string nuget_type Field Value Type Description string | Edit this page View Source packageContent Declaration public string packageContent Field Value Type Description string | Edit this page View Source projectUrl Declaration public string projectUrl Field Value Type Description string | Edit this page View Source published Declaration public string published Field Value Type Description string | Edit this page View Source requireLicenseAcceptance Declaration public bool requireLicenseAcceptance Field Value Type Description bool | Edit this page View Source summary Declaration public string summary Field Value Type Description string | Edit this page View Source tags Declaration public string[] tags Field Value Type Description string[] | Edit this page View Source title Declaration public string title Field Value Type Description string | Edit this page View Source version Declaration public string version Field Value Type Description string Methods | Edit this page View Source ToPackageJson() Declaration public PackageJson ToPackageJson() Returns Type Description PackageJson"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Datum.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Datum.html",
    "title": "Class Datum | NuGet importer for Unity documentation",
    "keywords": "Class Datum Package information returned by the search 検索で返ってくるパッケージの情報。 Inheritance object Datum Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Datum Fields | Edit this page View Source authors Declaration public string[] authors Field Value Type Description string[] | Edit this page View Source description Declaration public string description Field Value Type Description string | Edit this page View Source icon Declaration [NonSerialized] public Texture2D icon Field Value Type Description Texture2D | Edit this page View Source iconUrl Declaration public string iconUrl Field Value Type Description string | Edit this page View Source id Declaration public string id Field Value Type Description string | Edit this page View Source licenseUrl Declaration public string licenseUrl Field Value Type Description string | Edit this page View Source nuget_id Declaration public string nuget_id Field Value Type Description string | Edit this page View Source nuget_type Declaration public string nuget_type Field Value Type Description string | Edit this page View Source packageTypes Declaration public Packagetype[] packageTypes Field Value Type Description Packagetype[] | Edit this page View Source projectUrl Declaration public string projectUrl Field Value Type Description string | Edit this page View Source registration Declaration public string registration Field Value Type Description string | Edit this page View Source summary Declaration public string summary Field Value Type Description string | Edit this page View Source tags Declaration public string[] tags Field Value Type Description string[] | Edit this page View Source title Declaration public string title Field Value Type Description string | Edit this page View Source totalDownloads Declaration public long totalDownloads Field Value Type Description long | Edit this page View Source verified Declaration public bool verified Field Value Type Description bool | Edit this page View Source version Declaration public string version Field Value Type Description string | Edit this page View Source versions Declaration public PackageVersionInformation[] versions Field Value Type Description PackageVersionInformation[] Methods | Edit this page View Source GetAllVersion() Get all versions of catalog. 全てのバージョンを取得する。 Declaration public List<string> GetAllVersion() Returns Type Description List<string> versions Extension Methods PackageDataExtensionToGUI.GetIcon(Datum)"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.DefaultIgnorePackages.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.DefaultIgnorePackages.html",
    "title": "Class DefaultIgnorePackages | NuGet importer for Unity documentation",
    "keywords": "Class DefaultIgnorePackages Class of package to ignore by default. デフォルトで無視するパッケージの一覧。 Inheritance object DefaultIgnorePackages Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax public static class DefaultIgnorePackages Properties | Edit this page View Source Names Package names. パッケージ名。 Declaration public static IReadOnlyList<string> Names { get; } Property Value Type Description IReadOnlyList<string>"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Dependency.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Dependency.html",
    "title": "Class Dependency | NuGet importer for Unity documentation",
    "keywords": "Class Dependency Inheritance object Dependency Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Dependency Fields | Edit this page View Source id Declaration public string id Field Value Type Description string | Edit this page View Source nuget_id Declaration public string nuget_id Field Value Type Description string | Edit this page View Source nuget_type Declaration public string nuget_type Field Value Type Description string | Edit this page View Source range Declaration public string range Field Value Type Description string | Edit this page View Source registration Declaration public string registration Field Value Type Description string"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.DependencyNode.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.DependencyNode.html",
    "title": "Class DependencyNode | NuGet importer for Unity documentation",
    "keywords": "Class DependencyNode Inheritance Object DependencyNode Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax class DependencyNode Constructors DependencyNode(String, String) Declaration DependencyNode(string packageName, string allowedVersion) Parameters Type Name Description String packageName String allowedVersion Fields DependedNode Declaration readonly List<DependencyNode> DependedNode Field Value Type Description List<DependencyNode> DependingNode Declaration readonly List<DependencyNode> DependingNode Field Value Type Description List<DependencyNode> Properties PackageName Declaration string PackageName { } Property Value Type Description String TargetFramework Declaration string TargetFramework { } Property Value Type Description String Version Declaration SemVer Version { } Property Value Type Description SemVer"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Dependencygroup.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Dependencygroup.html",
    "title": "Class Dependencygroup | NuGet importer for Unity documentation",
    "keywords": "Class Dependencygroup Inheritance object Dependencygroup Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Dependencygroup Fields | Edit this page View Source dependencies Declaration public Dependency[] dependencies Field Value Type Description Dependency[] | Edit this page View Source nuget_id Declaration public string nuget_id Field Value Type Description string | Edit this page View Source nuget_type Declaration public string nuget_type Field Value Type Description string | Edit this page View Source targetFramework Declaration public string targetFramework Field Value Type Description string"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.FrameworkName.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.FrameworkName.html",
    "title": "Class FrameworkName | NuGet importer for Unity documentation",
    "keywords": "Class FrameworkName Inheritance object FrameworkName Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax public static class FrameworkName Fields | Edit this page View Source net20 Declaration public static readonly string[] net20 Field Value Type Description string[] | Edit this page View Source net35 Declaration public static readonly string[] net35 Field Value Type Description string[] | Edit this page View Source net40 Declaration public static readonly string[] net40 Field Value Type Description string[] | Edit this page View Source net403 Declaration public static readonly string[] net403 Field Value Type Description string[] | Edit this page View Source net45 Declaration public static readonly string[] net45 Field Value Type Description string[] | Edit this page View Source net451 Declaration public static readonly string[] net451 Field Value Type Description string[] | Edit this page View Source net452 Declaration public static readonly string[] net452 Field Value Type Description string[] | Edit this page View Source net46 Declaration public static readonly string[] net46 Field Value Type Description string[] | Edit this page View Source net461 Declaration public static readonly string[] net461 Field Value Type Description string[] | Edit this page View Source net462 Declaration public static readonly string[] net462 Field Value Type Description string[] | Edit this page View Source net463 Declaration public static readonly string[] net463 Field Value Type Description string[] | Edit this page View Source net47 Declaration public static readonly string[] net47 Field Value Type Description string[] | Edit this page View Source net471 Declaration public static readonly string[] net471 Field Value Type Description string[] | Edit this page View Source net472 Declaration public static readonly string[] net472 Field Value Type Description string[] | Edit this page View Source net48 Declaration public static readonly string[] net48 Field Value Type Description string[] | Edit this page View Source standard10 Declaration public static readonly string[] standard10 Field Value Type Description string[] | Edit this page View Source standard11 Declaration public static readonly string[] standard11 Field Value Type Description string[] | Edit this page View Source standard12 Declaration public static readonly string[] standard12 Field Value Type Description string[] | Edit this page View Source standard13 Declaration public static readonly string[] standard13 Field Value Type Description string[] | Edit this page View Source standard14 Declaration public static readonly string[] standard14 Field Value Type Description string[] | Edit this page View Source standard15 Declaration public static readonly string[] standard15 Field Value Type Description string[] | Edit this page View Source standard16 Declaration public static readonly string[] standard16 Field Value Type Description string[] | Edit this page View Source standard17 Declaration public static readonly string[] standard17 Field Value Type Description string[] | Edit this page View Source standard20 Declaration public static readonly string[] standard20 Field Value Type Description string[] | Edit this page View Source standard21 Declaration public static readonly string[] standard21 Field Value Type Description string[] Properties | Edit this page View Source ALLFLATPLATFORM All framework name 全てのフレームワークの名前 Declaration public static List<string> ALLFLATPLATFORM { get; } Property Value Type Description List<string> | Edit this page View Source ALLPLATFORM All framework name 全てのフレームワークの名前 Declaration public static List<string[]> ALLPLATFORM { get; } Property Value Type Description List<string[]> | Edit this page View Source NET4_6 Available .NETFramework4.6 or lower names 利用可能な.NETFramework4.6以下のの名前 Declaration public static List<string> NET4_6 { get; } Property Value Type Description List<string> | Edit this page View Source NET4_8 Available .NETFramework4.8 or lower names 利用可能な.NETFramework4.8以下のの名前 Declaration public static List<string> NET4_8 { get; } Property Value Type Description List<string> | Edit this page View Source STANDARD1_X Available .NETStandard1.x name 利用可能な.NETStandard1.xの名前 Declaration public static List<string> STANDARD1_X { get; } Property Value Type Description List<string> | Edit this page View Source STANDARD2_0 Available .NETStandard name 利用可能な.NETStandardの名前 Declaration public static List<string> STANDARD2_0 { get; } Property Value Type Description List<string> | Edit this page View Source STANDARD2_1 Available .NETStandard2.1 or lower names 利用可能な.NETStandard2.1以下の名前 Declaration public static List<string> STANDARD2_1 { get; } Property Value Type Description List<string> | Edit this page View Source TARGET List of framework names to target 対象とするフレームワーク名のリスト Declaration public static List<string> TARGET { get; } Property Value Type Description List<string> Exceptions Type Condition NotSupportedException Thrown when the environment is not .Net4.x equivalent. .Net4.x equivalent以外の環境のときスローされる。"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.InstallMethod.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.InstallMethod.html",
    "title": "Enum InstallMethod | NuGet importer for Unity documentation",
    "keywords": "Enum InstallMethod Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax public enum InstallMethod Fields Name Description AsAssets AsUPM"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.InstalledPackages.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.InstalledPackages.html",
    "title": "Class InstalledPackages | NuGet importer for Unity documentation",
    "keywords": "Class InstalledPackages Inheritance object InstalledPackages Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] [DesignerCategory(\"code\")] [XmlType(AnonymousType = true)] [XmlRoot(\"packages\", Namespace = \"\", IsNullable = false)] public class InstalledPackages Properties | Edit this page View Source Package Declaration [XmlElement(\"package\")] public List<Package> Package { get; set; } Property Value Type Description List<Package>"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Item.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Item.html",
    "title": "Class Item | NuGet importer for Unity documentation",
    "keywords": "Class Item Inheritance object Item Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Item Fields | Edit this page View Source commitId Declaration public string commitId Field Value Type Description string | Edit this page View Source commitTimeStamp Declaration public string commitTimeStamp Field Value Type Description string | Edit this page View Source count Declaration public int count Field Value Type Description int | Edit this page View Source items Declaration public Item1[] items Field Value Type Description Item1[] CatalogEntrys CatalogEntryがこの中に入っている。 | Edit this page View Source lower Declaration public string lower Field Value Type Description string | Edit this page View Source nuget_id Declaration public string nuget_id Field Value Type Description string | Edit this page View Source nuget_type Declaration public string nuget_type Field Value Type Description string | Edit this page View Source parent Declaration public string parent Field Value Type Description string | Edit this page View Source upper Declaration public string upper Field Value Type Description string"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Item1.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Item1.html",
    "title": "Class Item1 | NuGet importer for Unity documentation",
    "keywords": "Class Item1 Inheritance object Item1 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Item1 Fields | Edit this page View Source catalogEntry Declaration public Catalogentry catalogEntry Field Value Type Description Catalogentry CatalogEntry CatalogEntryがこの中に入っている。 | Edit this page View Source commitId Declaration public string commitId Field Value Type Description string | Edit this page View Source commitTimeStamp Declaration public string commitTimeStamp Field Value Type Description string | Edit this page View Source nuget_id Declaration public string nuget_id Field Value Type Description string | Edit this page View Source nuget_type Declaration public string nuget_type Field Value Type Description string | Edit this page View Source packageContent Declaration public string packageContent Field Value Type Description string | Edit this page View Source registration Declaration public string registration Field Value Type Description string"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.ManagedPluginList.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.ManagedPluginList.html",
    "title": "Class ManagedPluginList | NuGet importer for Unity documentation",
    "keywords": "Class ManagedPluginList Inheritance object ManagedPluginList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class ManagedPluginList Fields | Edit this page View Source managedList Declaration public List<PackageManagedPluginList> managedList Field Value Type Description List<PackageManagedPluginList>"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.NativePlatform.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.NativePlatform.html",
    "title": "Class NativePlatform | NuGet importer for Unity documentation",
    "keywords": "Class NativePlatform Identify native plug-in platforms. ネイティブプラグインのプラットフォームを特定。 Inheritance object NativePlatform Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax public class NativePlatform Constructors | Edit this page View Source NativePlatform(string) Declaration public NativePlatform(string directoryPath) Parameters Type Name Description string directoryPath Fields | Edit this page View Source Architecture Declaration public readonly string Architecture Field Value Type Description string | Edit this page View Source OS Declaration public readonly string OS Field Value Type Description string | Edit this page View Source OSPriority Declaration public readonly int OSPriority Field Value Type Description int | Edit this page View Source Path Declaration public readonly string Path Field Value Type Description string"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.OSType.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.OSType.html",
    "title": "Enum OSType | NuGet importer for Unity documentation",
    "keywords": "Enum OSType Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax public enum OSType Fields Name Description Alpine Android Arch Centos Debian Fedora Gentoo IOS Linux OSX Opensuse Rhel Ubuntu Win"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.OperationResult.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.OperationResult.html",
    "title": "Struct OperationResult | NuGet importer for Unity documentation",
    "keywords": "Struct OperationResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax public struct OperationResult Constructors | Edit this page View Source OperationResult(OperationState, string) Declaration public OperationResult(OperationState state, string message) Parameters Type Name Description OperationState state string message Properties | Edit this page View Source Message Declaration public readonly string Message { get; } Property Value Type Description string | Edit this page View Source State Declaration public readonly OperationState State { get; } Property Value Type Description OperationState"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.OperationState.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.OperationState.html",
    "title": "Enum OperationState | NuGet importer for Unity documentation",
    "keywords": "Enum OperationState Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax public enum OperationState Fields Name Description Cancel Failure Progress Success"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Package.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Package.html",
    "title": "Class Package | NuGet importer for Unity documentation",
    "keywords": "Class Package Inheritance object Package Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] [DesignerCategory(\"code\")] [XmlType(AnonymousType = true)] public class Package Fields | Edit this page View Source VersionField Declaration [XmlIgnore] public SemVer VersionField Field Value Type Description SemVer Properties | Edit this page View Source AllowedVersions Declaration [XmlAttribute] public string AllowedVersions { get; set; } Property Value Type Description string | Edit this page View Source ID Declaration [XmlAttribute] public string ID { get; set; } Property Value Type Description string | Edit this page View Source TargetFramework Declaration [XmlAttribute] public string TargetFramework { get; set; } Property Value Type Description string | Edit this page View Source Version Declaration [XmlAttribute] public string Version { get; set; } Property Value Type Description string"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.PackageJson.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.PackageJson.html",
    "title": "Class PackageJson | NuGet importer for Unity documentation",
    "keywords": "Class PackageJson Data about package.json. package.jsonのデータ。 Inheritance object PackageJson Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class PackageJson Fields | Edit this page View Source author Declaration public Author author Field Value Type Description Author | Edit this page View Source description Declaration public string description Field Value Type Description string | Edit this page View Source displayName Declaration public string displayName Field Value Type Description string | Edit this page View Source keywords Declaration public string[] keywords Field Value Type Description string[] | Edit this page View Source name Declaration public string name Field Value Type Description string | Edit this page View Source unity Declaration public string unity Field Value Type Description string | Edit this page View Source version Declaration public string version Field Value Type Description string"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.PackageManagedPluginList.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.PackageManagedPluginList.html",
    "title": "Class PackageManagedPluginList | NuGet importer for Unity documentation",
    "keywords": "Class PackageManagedPluginList Inheritance object PackageManagedPluginList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class PackageManagedPluginList Fields | Edit this page View Source fileNames Declaration public List<string> fileNames Field Value Type Description List<string> | Edit this page View Source packageName Declaration public string packageName Field Value Type Description string"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.PackageSummary.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.PackageSummary.html",
    "title": "Class PackageSummary | NuGet importer for Unity documentation",
    "keywords": "Class PackageSummary Inheritance object PackageSummary Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax public class PackageSummary Constructors | Edit this page View Source PackageSummary(string, string, Texture2D, string, List<string>, string) Declaration public PackageSummary(string id, string title, Texture2D image, string selectedVersion, List<string> allVersion, string installedVersion = null) Parameters Type Name Description string id string title Texture2D image string selectedVersion List<string> allVersion string installedVersion Properties | Edit this page View Source AllVersion Declaration public List<string> AllVersion { get; } Property Value Type Description List<string> | Edit this page View Source Image Declaration public Texture2D Image { get; } Property Value Type Description Texture2D | Edit this page View Source InstalledVersion Declaration public string InstalledVersion { get; set; } Property Value Type Description string | Edit this page View Source PackageId Declaration public string PackageId { get; } Property Value Type Description string | Edit this page View Source SelectedVersion Declaration public string SelectedVersion { get; set; } Property Value Type Description string | Edit this page View Source StableVersion Declaration public List<string> StableVersion { get; } Property Value Type Description List<string> | Edit this page View Source Title Declaration public string Title { get; } Property Value Type Description string"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.PackageVersionInformation.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.PackageVersionInformation.html",
    "title": "Class PackageVersionInformation | NuGet importer for Unity documentation",
    "keywords": "Class PackageVersionInformation Inheritance object PackageVersionInformation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class PackageVersionInformation Fields | Edit this page View Source downloads Declaration public int downloads Field Value Type Description int | Edit this page View Source nuget_id Declaration public string nuget_id Field Value Type Description string | Edit this page View Source version Declaration public string version Field Value Type Description string"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Packagetype.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Packagetype.html",
    "title": "Class Packagetype | NuGet importer for Unity documentation",
    "keywords": "Class Packagetype Inheritance object Packagetype Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Packagetype Fields | Edit this page View Source name Declaration public string name Field Value Type Description string"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.ReadOnlyControlledPackages.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.ReadOnlyControlledPackages.html",
    "title": "Class ReadOnlyControlledPackages | NuGet importer for Unity documentation",
    "keywords": "Class ReadOnlyControlledPackages List of packages under management that can only be read. 読み込みのみ可能な管理下にあるパッケージ一覧。 Inheritance object ReadOnlyControlledPackages Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax public class ReadOnlyControlledPackages Constructors | Edit this page View Source ReadOnlyControlledPackages(InstalledPackages, InstalledPackages, InstalledPackages) Declaration public ReadOnlyControlledPackages(InstalledPackages installedPackage, InstalledPackages rootPackage, InstalledPackages existingPackage) Parameters Type Name Description InstalledPackages installedPackage InstalledPackages rootPackage InstalledPackages existingPackage Fields | Edit this page View Source Existing Declaration public readonly IList<Package> Existing Field Value Type Description IList<Package> | Edit this page View Source Installed Declaration public readonly IList<Package> Installed Field Value Type Description IList<Package> | Edit this page View Source Root Declaration public readonly IList<Package> Root Field Value Type Description IList<Package> Methods | Edit this page View Source Clone() Declaration public ReadOnlyControlledPackages Clone() Returns Type Description ReadOnlyControlledPackages"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.Resource.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.Resource.html",
    "title": "Class Resource | NuGet importer for Unity documentation",
    "keywords": "Class Resource Inheritance object Resource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class Resource Fields | Edit this page View Source clientVersion Declaration public string clientVersion Field Value Type Description string | Edit this page View Source comment Declaration public string comment Field Value Type Description string Comment of API APIについてのコメント。説明が書いてある。 | Edit this page View Source nuget_id Declaration public string nuget_id Field Value Type Description string Entry point of API APIのエントリーポイント。URL。 | Edit this page View Source nuget_type Declaration public string nuget_type Field Value Type Description string"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.SearchResult.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.SearchResult.html",
    "title": "Class SearchResult | NuGet importer for Unity documentation",
    "keywords": "Class SearchResult Search results in NuGet. NuGetで検索した結果。 Inheritance object SearchResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class SearchResult Fields | Edit this page View Source data Declaration public Datum[] data Field Value Type Description Datum[] Packages found in the search 検索にヒットしたパッケージ。 | Edit this page View Source totalHits Declaration public int totalHits Field Value Type Description int"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.SemVer.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.SemVer.html",
    "title": "Class SemVer | NuGet importer for Unity documentation",
    "keywords": "Class SemVer Simple Semantic Versioning 簡易的なセマンティックバージョニング(2.0.0) Inheritance object SemVer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax public class SemVer Properties | Edit this page View Source AllowedVersion Declaration public string AllowedVersion { get; set; } Property Value Type Description string Allowed version 許可されたバージョン。 | Edit this page View Source ExistVersion Declaration public List<string> ExistVersion { get; set; } Property Value Type Description List<string> | Edit this page View Source SelectedVersion Declaration public string SelectedVersion { get; set; } Property Value Type Description string Selected version 選択されたバージョン Exceptions Type Condition ArgumentException Thrown when given version is not in the exist version. 与えられたversionがexist versionの中にない場合にthrowされる。 IndexOutOfRangeException Thrown when given version is not allowed. 与えられたバージョンが許可されたものの中にない場合にthrowされる。 Methods | Edit this page View Source GetSuitVersion(bool, VersionSelectMethod) Get suitable version. 最適なバージョンを取得する。 Declaration public string GetSuitVersion(bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description bool onlyStable Whether use only stable version. 安定版のみつかうか。 VersionSelectMethod method How to select a version. バージョンを選択する方法。 Returns Type Description string Suitable version 最適なバージョン Exceptions Type Condition InvalidOperationException Thrown when there is no suitable version. 最適なバージョンがないときthrowされる。 ArgumentException Thrown when given invalid method. 無効な選択方法が与えられたときthrowされる。 | Edit this page View Source Merge(SemVer, bool) Return a merged version of this object and the given object. このオブジェクトと引数のオブジェクトをマージしたものを返す。 Declaration public SemVer Merge(SemVer newVersion, bool onlyStable = true) Parameters Type Name Description SemVer newVersion Objects to be merged. マージされるオブジェクト。 bool onlyStable Whether use only stable version. 安定版のみつかうか。 Returns Type Description SemVer Merged Semantic Versioning. マージされたセマンティックバージョニング。 Exceptions Type Condition ArgumentException Thrown when different exist version or no suite version. exist versionが違うときや最適なバージョンがないときにthrowされる。 | Edit this page View Source SortVersion(IEnumerable<string>) Sort the given version in descending order. 与えられたバージョンを降順にソートする。 Declaration public static List<string> SortVersion(IEnumerable<string> versions) Parameters Type Name Description IEnumerable<string> versions Versions to be sorted. ソートされるバージョン。 Returns Type Description List<string> Sorted version ソートされたバージョン | Edit this page View Source ToMathExpression(string) Returns a mathematical representation of given versions. 与えられた許可されたバージョンを数学的表現に直して返す。 Declaration public static string ToMathExpression(string allowedVersion) Parameters Type Name Description string allowedVersion Interval notation for specifying version ranges in NuGet.https://docs.microsoft.com/en-us/nuget/concepts/package-versioning#version-ranges NuGetで用いられるバージョン範囲を指定するために間隔表記。https://docs.microsoft.com/ja-jp/nuget/concepts/package-versioning#version-ranges Returns Type Description string Mathematical representation 数学的表現"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.StandardLibraries.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.StandardLibraries.html",
    "title": "Class StandardLibraries | NuGet importer for Unity documentation",
    "keywords": "Class StandardLibraries List of packages contained in Unity. Unityで最初から含まれているパッケージ一覧。 Inheritance object StandardLibraries Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax public static class StandardLibraries Properties | Edit this page View Source PackageIds Declaration public static IList<string> PackageIds { get; } Property Value Type Description IList<string>"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.VersionSelectMethod.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.VersionSelectMethod.html",
    "title": "Enum VersionSelectMethod | NuGet importer for Unity documentation",
    "keywords": "Enum VersionSelectMethod Namespace: kumaS.NuGetImporter.Editor.DataClasses Assembly: kumaS.NuGetImporter.Editor.dll Syntax public enum VersionSelectMethod Fields Name Description Highest Lowest Suit"
  },
  "api/kumaS.NuGetImporter.Editor.DataClasses.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DataClasses.html",
    "title": "Namespace kumaS.NuGetImporter.Editor.DataClasses | NuGet importer for Unity documentation",
    "keywords": "Namespace kumaS.NuGetImporter.Editor.DataClasses Classes APIList List of available API 利用可能なAPIの一覧 Author Data about author. 作者のデータ。 Catalog Catalog of package. パッケージのカタログ。 Catalogentry Infomation of package. パッケージのバージョンごとの情報。 Datum Package information returned by the search 検索で返ってくるパッケージの情報。 DefaultIgnorePackages Class of package to ignore by default. デフォルトで無視するパッケージの一覧。 Dependency Dependencygroup FrameworkName InstalledPackages Item Item1 ManagedPluginList NativePlatform Identify native plug-in platforms. ネイティブプラグインのプラットフォームを特定。 Package PackageJson Data about package.json. package.jsonのデータ。 PackageManagedPluginList PackageSummary PackageVersionInformation Packagetype ReadOnlyControlledPackages List of packages under management that can only be read. 読み込みのみ可能な管理下にあるパッケージ一覧。 Resource SearchResult Search results in NuGet. NuGetで検索した結果。 SemVer Simple Semantic Versioning 簡易的なセマンティックバージョニング(2.0.0) StandardLibraries List of packages contained in Unity. Unityで最初から含まれているパッケージ一覧。 Structs OperationResult Enums ArchitectureType InstallMethod OSType OperationState VersionSelectMethod"
  },
  "api/kumaS.NuGetImporter.Editor.DependencySolver.html": {
    "href": "api/kumaS.NuGetImporter.Editor.DependencySolver.html",
    "title": "Class DependencySolver | NuGet importer for Unity documentation",
    "keywords": "Class DependencySolver Class that provides a method to resolve package dependencies. 依存関係を解決するメソッドを提供するクラス。 Inheritance object DependencySolver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax public static class DependencySolver Methods | Edit this page View Source CheckAllPackage(ReadOnlyControlledPackages, bool, VersionSelectMethod) Find the required packages in the installed package. インストール済みのものから必要なパッケージを探す。 Declaration public static Task<List<Package>> CheckAllPackage(ReadOnlyControlledPackages controlledPackages, bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description ReadOnlyControlledPackages controlledPackages List of packages currently under control. 現在制御下にあるパッケージ一覧。 bool onlyStable Whether use only stable version. 安定版のみつかうか。 VersionSelectMethod method Method to select a version. Returns Type Description Task<List<Package>> Required packages include installed and specified ones. インストール済みや、指定したものを含んだ必要なパッケージ。 Exceptions Type Condition InvalidOperationException Thrown when dependency conflict occered. 依存関係に衝突があるときthrowされる。 ArgumentException Thrown when there is a circular reference or there is no version of package. 循環参照があるときまたはパッケージのバージョンがないときthrowされる。 | Edit this page View Source FindRemovablePackages(string, ReadOnlyControlledPackages, bool, VersionSelectMethod) Find removable packages when the specified package is removed. 特定のパッケージを除去した際取り除けるパッケージを探す。 Declaration public static Task<List<Package>> FindRemovablePackages(string removePackageId, ReadOnlyControlledPackages controlledPackages, bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description string removePackageId Remove package. 除去するパッケージ。 ReadOnlyControlledPackages controlledPackages List of packages currently under control. 現在制御下にあるパッケージ一覧。 bool onlyStable Whether use only stable version. 安定版のみつかうか。 VersionSelectMethod method Method to select a version. バージョンを選択する方法。 Returns Type Description Task<List<Package>> Removable packages. 除去可能なパッケージ。 Exceptions Type Condition InvalidOperationException Thrown when dependency conflict occered. 依存関係に衝突があるときthrowされる。 ArgumentException Thrown when there is a circular reference or there is no version of package. 循環参照があるときまたはパッケージのバージョンがないときthrowされる。 | Edit this page View Source FindRequiredPackages(string, string, ReadOnlyControlledPackages, bool, VersionSelectMethod) Find the required packages in the installed and specified packages. インストールされたパッケージと指定したパッケージを元に必要なパッケージを探す。 Declaration public static Task<List<Package>> FindRequiredPackages(string packageId, string version, ReadOnlyControlledPackages controlledPackages, bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description string packageId Package id パッケージのid string version Package version パッケージのバージョン ReadOnlyControlledPackages controlledPackages List of packages currently under control. 現在制御下にあるパッケージ一覧。 bool onlyStable Whether use only stable version. 安定版のみつかうか。 VersionSelectMethod method Method to select a version. バージョンを選択する方法。 Returns Type Description Task<List<Package>> Required packages include installed and specified ones. インストール済みや、指定したものを含んだ必要なパッケージ。 Exceptions Type Condition InvalidOperationException Thrown when dependency conflict occered. 依存関係に衝突があるときthrowされる。 ArgumentException Thrown when there is a circular reference or there is no version of package. 循環参照があるときまたはパッケージのバージョンがないときthrowされる。 | Edit this page View Source FindRequiredPackagesWhenChangeVersion(string, string, ReadOnlyControlledPackages, bool, VersionSelectMethod) Find the required packages when change package version. パッケージのバージョンを変更する時に必要なパッケージを探す。 Declaration public static Task<List<Package>> FindRequiredPackagesWhenChangeVersion(string packageId, string version, ReadOnlyControlledPackages controlledPackages, bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description string packageId Package id パッケージのid string version Package version パッケージのバージョン ReadOnlyControlledPackages controlledPackages List of packages currently under control. 現在制御下にあるパッケージ一覧。 bool onlyStable Whether use only stable version. 安定版のみつかうか。 VersionSelectMethod method Method to select a version. バージョンを選択する方法。 Returns Type Description Task<List<Package>> Required packages include installed and specified ones. インストール済みや、指定したものを含んだ必要なパッケージ。 Exceptions Type Condition InvalidOperationException Thrown when dependency conflict occered. 依存関係に衝突があるときthrowされる。 ArgumentException Thrown when there is a circular reference or there is no version of package. 循環参照があるときまたはパッケージのバージョンがないときthrowされる。"
  },
  "api/kumaS.NuGetImporter.Editor.GUILayoutExtention.html": {
    "href": "api/kumaS.NuGetImporter.Editor.GUILayoutExtention.html",
    "title": "Class GUILayoutExtention | NuGet importer for Unity documentation",
    "keywords": "Class GUILayoutExtention Additional GUILayout 追加(カスタム)のGUILayout Inheritance object GUILayoutExtention Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax public static class GUILayoutExtention Methods | Edit this page View Source UrlLabel(string, string, int, GUIStyle, params GUILayoutOption[]) Label for URL. URLのためのラベル。 Declaration public static void UrlLabel(string text, string url, int fontSize = -1, GUIStyle style = null, params GUILayoutOption[] options) Parameters Type Name Description string text Shown text. 表示されるテキスト。 string url URL to go to when clicked. クリックしたときに飛ぶURL。 int fontSize Text font size. If less than 0, this become default. (option) テキストのフォントサイズ。0以下の場合デフォルト値になる。（オプション） GUIStyle style The style to use. (option) 使用されるGUIStyle。（オプション） GUILayoutOption[] options An optional list of layout options that specify extra layouting properties. 追加のレイアウトプロパティを指定するレイアウトオプションのオプションリスト。 | Edit this page View Source WrapedLabel(string, int, GUIStyle, params GUILayoutOption[]) Labels to be automatically wrapped. 自動で改行できるラベル。 Declaration public static void WrapedLabel(string text, int fontSize = -1, GUIStyle style = null, params GUILayoutOption[] options) Parameters Type Name Description string text Shown text. 表示されるテキスト。 int fontSize Text font size. If less than 0, this become default. (option) テキストのフォントサイズ。0以下の場合デフォルト値になる。（オプション） GUIStyle style The style to use. (option) 使用されるGUIStyle。（オプション） GUILayoutOption[] options An optional list of layout options that specify extra layouting properties. 追加のレイアウトプロパティを指定するレイアウトオプションのオプションリスト。"
  },
  "api/kumaS.NuGetImporter.Editor.NuGet.html": {
    "href": "api/kumaS.NuGetImporter.Editor.NuGet.html",
    "title": "Class NuGet | NuGet importer for Unity documentation",
    "keywords": "Class NuGet Class for using NuGet API. NuGetのAPIを使うためのクラス。 Inheritance object NuGet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax public static class NuGet Methods | Edit this page View Source DeleteCache() Delete the cache of search and catalog. カタログと検索結果のキャッシュを削除する。 Declaration public static void DeleteCache() | Edit this page View Source GetCatalog(string) Get the specified catalog. 指定したカタログを所得する。 Declaration public static Task<Catalog> GetCatalog(string packageName) Parameters Type Name Description string packageName Package name. パッケージの名前。 Returns Type Description Task<Catalog> Specified catalog. 指定したカタログ。 | Edit this page View Source GetDownloadingProgress(string) Get the downloaded byte length of the package currently downloading. ダウンロード中のパッケージのダウンロードしたバイト数を取得する。 Declaration public static (long packageSize, long downloadedSize) GetDownloadingProgress(string packageName) Parameters Type Name Description string packageName Name of the package. 取得したいパッケージの名前。 Returns Type Description (long packageSize, long downloadedSize) Current downloaded byte length. 現在のダウンロードしたバイト数。 Exceptions Type Condition ArgumentException Thrown when the given package is not downloading. 与えられたパッケージがダウンロード中でないときthrowされる。 | Edit this page View Source GetPackage(string, string, string) Get the specified package. 指定したパッケージを取得する。 Declaration public static Task GetPackage(string packageName, string version, string savePath) Parameters Type Name Description string packageName Package name. パッケージの名前。 string version Version. バージョン。 string savePath Destination directory. It will be saved as a .nupkg file in this directory. 保存先のディレクトリ。このディレクトリ内に.nupkgファイルとして保存される。 Returns Type Description Task Task | Edit this page View Source InitializeAPIEndPoint() Initialize the API endpoint. APIのエンドポイントを初期化する。 Declaration [InitializeOnLoadMethod] public static void InitializeAPIEndPoint() | Edit this page View Source SearchPackage(string, int, int, bool) Search for packages. パッケージを検索する。 Declaration public static Task<SearchResult> SearchPackage(string q = \"\", int skip = -1, int take = -1, bool prerelease = false) Parameters Type Name Description string q Search word. 検索語句。 int skip Number of packages to skip. スキップするパッケージの数。 int take Number of packages to take. 取得するパッケージの数。 bool prerelease Whether include prerelease. プリリリースを含めるか。 Returns Type Description Task<SearchResult> Search result. 検索結果。 | Edit this page View Source SetTimeout(TimeSpan) Set Timeout. タイムアウト時間を再設定。 Declaration public static Task SetTimeout(TimeSpan timeout) Parameters Type Name Description TimeSpan timeout Returns Type Description Task | Edit this page View Source TryGetDownloadingProgress(string, out long, out long) Declaration public static bool TryGetDownloadingProgress(string packageName, out long packageSize, out long downloadedSize) Parameters Type Name Description string packageName long packageSize long downloadedSize Returns Type Description bool"
  },
  "api/kumaS.NuGetImporter.Editor.NuGetAnalyzerImportSetting.html": {
    "href": "api/kumaS.NuGetImporter.Editor.NuGetAnalyzerImportSetting.html",
    "title": "Class NuGetAnalyzerImportSetting | NuGet importer for Unity documentation",
    "keywords": "Class NuGetAnalyzerImportSetting Class for configuring Roslyn Analyzer plugins. Roslyn Analyzerの設定をするためのクラス。 Inheritance object AssetPostprocessor NuGetAnalyzerImportSetting Inherited Members AssetPostprocessor.LogWarning(string) AssetPostprocessor.LogWarning(string, Object) AssetPostprocessor.LogError(string) AssetPostprocessor.LogError(string, Object) AssetPostprocessor.GetVersion() AssetPostprocessor.GetPostprocessOrder() AssetPostprocessor.assetPath AssetPostprocessor.context AssetPostprocessor.assetImporter AssetPostprocessor.preview object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax public class NuGetAnalyzerImportSetting : AssetPostprocessor Properties | Edit this page View Source HasAnalyzerSupport Declaration public static bool HasAnalyzerSupport { get; } Property Value Type Description bool"
  },
  "api/kumaS.NuGetImporter.Editor.NuGetImporterSettingWindow.html": {
    "href": "api/kumaS.NuGetImporter.Editor.NuGetImporterSettingWindow.html",
    "title": "Class NuGetImporterSettingWindow | NuGet importer for Unity documentation",
    "keywords": "Class NuGetImporterSettingWindow EditorWindow class to configure settings for NuGet importer. NuGet importerの設定をするエディタウィンドウクラス。 Inheritance object Object ScriptableObject EditorWindow NuGetImporterSettingWindow Inherited Members EditorWindow.BeginWindows() EditorWindow.EndWindows() EditorWindow.ShowNotification(GUIContent) EditorWindow.ShowNotification(GUIContent, double) EditorWindow.RemoveNotification() EditorWindow.ShowTab() EditorWindow.Focus() EditorWindow.ShowUtility() EditorWindow.ShowPopup() EditorWindow.ShowModalUtility() EditorWindow.ShowAsDropDown(Rect, Vector2) EditorWindow.Show() EditorWindow.Show(bool) EditorWindow.ShowAuxWindow() EditorWindow.ShowModal() EditorWindow.GetWindow(Type, bool, string, bool) EditorWindow.GetWindow(Type, bool, string) EditorWindow.GetWindow(Type, bool) EditorWindow.GetWindow(Type) EditorWindow.GetWindowWithRect(Type, Rect, bool, string) EditorWindow.GetWindowWithRect(Type, Rect, bool) EditorWindow.GetWindowWithRect(Type, Rect) EditorWindow.GetWindow<T>() EditorWindow.GetWindow<T>(bool) EditorWindow.GetWindow<T>(bool, string) EditorWindow.GetWindow<T>(string) EditorWindow.GetWindow<T>(string, bool) EditorWindow.GetWindow<T>(bool, string, bool) EditorWindow.GetWindow<T>(params Type[]) EditorWindow.GetWindow<T>(string, params Type[]) EditorWindow.GetWindow<T>(string, bool, params Type[]) EditorWindow.CreateWindow<T>(params Type[]) EditorWindow.CreateWindow<T>(string, params Type[]) EditorWindow.HasOpenInstances<T>() EditorWindow.FocusWindowIfItsOpen(Type) EditorWindow.FocusWindowIfItsOpen<T>() EditorWindow.GetWindowWithRect<T>(Rect) EditorWindow.GetWindowWithRect<T>(Rect, bool) EditorWindow.GetWindowWithRect<T>(Rect, bool, string) EditorWindow.GetWindowWithRect<T>(Rect, bool, string, bool) EditorWindow.SaveChanges() EditorWindow.Close() EditorWindow.Repaint() EditorWindow.SendEvent(Event) EditorWindow.GetExtraPaneTypes() EditorWindow.rootVisualElement EditorWindow.wantsMouseMove EditorWindow.wantsMouseEnterLeaveWindow EditorWindow.wantsLessLayoutEvents EditorWindow.autoRepaintOnSceneChange EditorWindow.maximized EditorWindow.hasFocus EditorWindow.docked EditorWindow.focusedWindow EditorWindow.mouseOverWindow EditorWindow.hasUnsavedChanges EditorWindow.saveChangesMessage EditorWindow.minSize EditorWindow.maxSize EditorWindow.title EditorWindow.titleContent EditorWindow.depthBufferBits EditorWindow.antiAlias EditorWindow.position ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsOfType<T>(bool) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindObjectOfType(Type, bool) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax public class NuGetImporterSettingWindow : EditorWindow"
  },
  "api/kumaS.NuGetImporter.Editor.NuGetImporterSettings.html": {
    "href": "api/kumaS.NuGetImporter.Editor.NuGetImporterSettings.html",
    "title": "Class NuGetImporterSettings | NuGet importer for Unity documentation",
    "keywords": "Class NuGetImporterSettings Inheritance object NuGetImporterSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class NuGetImporterSettings Properties | Edit this page View Source AutoPackagePlacementCheck Is package placement checked at startup? 起動時にパッケージの配置をチェックするか。 Declaration public bool AutoPackagePlacementCheck { get; set; } Property Value Type Description bool | Edit this page View Source CatalogCacheLimit Declaration public int CatalogCacheLimit { get; set; } Property Value Type Description int Limit of catalog cache. カタログのキャッシュの最大数。 | Edit this page View Source IconCacheLimit Declaration public int IconCacheLimit { get; set; } Property Value Type Description int Limit of icon cache. アイコンのキャッシュの最大数。 | Edit this page View Source IgnorePackages Ignore pacakges. 無視するパッケージ。 Declaration public List<string> IgnorePackages { get; set; } Property Value Type Description List<string> | Edit this page View Source InstallMethod Declaration public InstallMethod InstallMethod { get; set; } Property Value Type Description InstallMethod Install method of NuGet package. NuGetパッケージのインストール方法。 | Edit this page View Source Instance Declaration public static NuGetImporterSettings Instance { get; } Property Value Type Description NuGetImporterSettings | Edit this page View Source IsCreateAsmdefForAnalyzer Declaration public bool IsCreateAsmdefForAnalyzer { get; set; } Property Value Type Description bool | Edit this page View Source IsNetworkSavemode A mode that reduces the network connections. ネットワーク接続を少なくするモード。 Declaration public bool IsNetworkSavemode { get; set; } Property Value Type Description bool | Edit this page View Source Method Declaration public VersionSelectMethod Method { get; set; } Property Value Type Description VersionSelectMethod Method to select a version. バージョンを選択する方法。 | Edit this page View Source OnlyStable Declaration public bool OnlyStable { get; set; } Property Value Type Description bool Use the stable version only? 安定版のみ使用するか。 | Edit this page View Source RetryLimit How many retries are allowed over a network connection. ネットワーク接続で何回までリトライするか。 Declaration public int RetryLimit { get; set; } Property Value Type Description int | Edit this page View Source SearchCacheLimit Declaration public int SearchCacheLimit { get; set; } Property Value Type Description int Limit of search cache. 検索のキャッシュの最大数。 | Edit this page View Source Timeout Network timeout time. ネットワークのタイムアウト時間。 Declaration public int Timeout { get; set; } Property Value Type Description int"
  },
  "api/kumaS.NuGetImporter.Editor.NuGetImporterWindow.html": {
    "href": "api/kumaS.NuGetImporter.Editor.NuGetImporterWindow.html",
    "title": "Class NuGetImporterWindow | NuGet importer for Unity documentation",
    "keywords": "Class NuGetImporterWindow Main window of NuGet importer. NuGet importerのメインウィンドウ。 Inheritance object Object ScriptableObject EditorWindow NuGetImporterWindow Inherited Members EditorWindow.BeginWindows() EditorWindow.EndWindows() EditorWindow.ShowNotification(GUIContent) EditorWindow.ShowNotification(GUIContent, double) EditorWindow.RemoveNotification() EditorWindow.ShowTab() EditorWindow.Focus() EditorWindow.ShowUtility() EditorWindow.ShowPopup() EditorWindow.ShowModalUtility() EditorWindow.ShowAsDropDown(Rect, Vector2) EditorWindow.Show() EditorWindow.Show(bool) EditorWindow.ShowAuxWindow() EditorWindow.ShowModal() EditorWindow.GetWindow(Type, bool, string, bool) EditorWindow.GetWindow(Type, bool, string) EditorWindow.GetWindow(Type, bool) EditorWindow.GetWindow(Type) EditorWindow.GetWindowWithRect(Type, Rect, bool, string) EditorWindow.GetWindowWithRect(Type, Rect, bool) EditorWindow.GetWindowWithRect(Type, Rect) EditorWindow.GetWindow<T>() EditorWindow.GetWindow<T>(bool) EditorWindow.GetWindow<T>(bool, string) EditorWindow.GetWindow<T>(string) EditorWindow.GetWindow<T>(string, bool) EditorWindow.GetWindow<T>(bool, string, bool) EditorWindow.GetWindow<T>(params Type[]) EditorWindow.GetWindow<T>(string, params Type[]) EditorWindow.GetWindow<T>(string, bool, params Type[]) EditorWindow.CreateWindow<T>(params Type[]) EditorWindow.CreateWindow<T>(string, params Type[]) EditorWindow.HasOpenInstances<T>() EditorWindow.FocusWindowIfItsOpen(Type) EditorWindow.FocusWindowIfItsOpen<T>() EditorWindow.GetWindowWithRect<T>(Rect) EditorWindow.GetWindowWithRect<T>(Rect, bool) EditorWindow.GetWindowWithRect<T>(Rect, bool, string) EditorWindow.GetWindowWithRect<T>(Rect, bool, string, bool) EditorWindow.SaveChanges() EditorWindow.Close() EditorWindow.Repaint() EditorWindow.SendEvent(Event) EditorWindow.GetExtraPaneTypes() EditorWindow.rootVisualElement EditorWindow.wantsMouseMove EditorWindow.wantsMouseEnterLeaveWindow EditorWindow.wantsLessLayoutEvents EditorWindow.autoRepaintOnSceneChange EditorWindow.maximized EditorWindow.hasFocus EditorWindow.docked EditorWindow.focusedWindow EditorWindow.mouseOverWindow EditorWindow.hasUnsavedChanges EditorWindow.saveChangesMessage EditorWindow.minSize EditorWindow.maxSize EditorWindow.title EditorWindow.titleContent EditorWindow.depthBufferBits EditorWindow.antiAlias EditorWindow.position ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsOfType<T>(bool) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindObjectOfType(Type, bool) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax public class NuGetImporterWindow : EditorWindow Methods | Edit this page View Source OnGUI() Draw the contents of the Window. ウィンドウの中身を描写。 Declaration public void OnGUI()"
  },
  "api/kumaS.NuGetImporter.Editor.NuGetNativeImportSetting.html": {
    "href": "api/kumaS.NuGetImporter.Editor.NuGetNativeImportSetting.html",
    "title": "Class NuGetNativeImportSetting | NuGet importer for Unity documentation",
    "keywords": "Class NuGetNativeImportSetting Class for configuring native plugins introduced from NuGet. NuGetから導入したネイティブプラグインの設定をするためのクラス。 Inheritance object AssetPostprocessor NuGetNativeImportSetting Inherited Members AssetPostprocessor.LogWarning(string) AssetPostprocessor.LogWarning(string, Object) AssetPostprocessor.LogError(string) AssetPostprocessor.LogError(string, Object) AssetPostprocessor.GetVersion() AssetPostprocessor.GetPostprocessOrder() AssetPostprocessor.assetPath AssetPostprocessor.context AssetPostprocessor.assetImporter AssetPostprocessor.preview object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax public class NuGetNativeImportSetting : AssetPostprocessor"
  },
  "api/kumaS.NuGetImporter.Editor.PackageControllerAsAsset.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageControllerAsAsset.html",
    "title": "Class PackageControllerAsAsset | NuGet importer for Unity documentation",
    "keywords": "Class PackageControllerAsAsset Inheritance Object PackageControllerBase PackageControllerAsAsset Inherited Members PackageControllerBase.serializer PackageControllerBase.deleteDirectories PackageControllerBase.PathSolver PackageControllerBase.UninstallManagedPackagesAsync(IEnumerable<Package>) PackageControllerBase.OperateWithNativeAsync(IEnumerable<Package>, IEnumerable<Package>, ICollection<Package>, IEnumerable<Package>, IEnumerable<Package>) PackageControllerBase.GetLoadableAsmInPackage(String, PackageManagedPluginList) PackageControllerBase.ExtractPackageAsync(Package) PackageControllerBase.ManagedPluginProcess(Package, String, String, String) PackageControllerBase.SelectManagedDirectory(String, String[], List<String>) PackageControllerBase.GetSuitFramework(String, String[], List<String>) PackageControllerBase.LocalizeDirectoryProcess(String, String, String) PackageControllerBase.NativeProcess(String, String, String) PackageControllerBase.AnalyzerProcess(String, String) PackageControllerBase.GroupLocalizedDirectory(String) PackageControllerBase.UninstallManagedPackageAsync(Package) PackageControllerBase.DeleteDirectory(String) PackageControllerBase.DeleteFile(String) PackageControllerBase.MoveDirectory(String, String, String) PackageControllerBase.CreateDeleteNativeProcess(IEnumerable<String>, IEnumerable<String>) PackageControllerBase.EnableArch Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax sealed class PackageControllerAsAsset : PackageControllerBase Constructors PackageControllerAsAsset() Declaration public PackageControllerAsAsset() Fields _managedPluginList Declaration static ManagedPluginList _managedPluginList Field Value Type Description ManagedPluginList ManagedPluginListLock Declaration static readonly object ManagedPluginListLock Field Value Type Description Object ManagedPluginListPath Declaration static readonly string ManagedPluginListPath Field Value Type Description String Methods DeletePluginsOutOfDirectory(Package) Remove plugins outside the specified directory. 規定ディレクトリ外のプラグインを削除する。 Declaration override void DeletePluginsOutOfDirectory(Package package) Parameters Type Name Description Package package Package. パッケージ。 Overrides PackageControllerBase.DeletePluginsOutOfDirectory(Package) InstallPackageAsync(Package, IEnumerable<String>) Install the specified package. 指定パッケージをインストールする。 Declaration override async Task<(bool isSkipped, Package package, PackageManagedPluginList asm)> InstallPackageAsync(Package package, IEnumerable<string> loadedAsmName) Parameters Type Name Description Package package Package to install. インストールするパッケージ。 IEnumerable<String> loadedAsmName Returns Type Description Task<(T1, T2, T3)<Boolean, Package, PackageManagedPluginList>> Overrides PackageControllerBase.InstallPackageAsync(Package, IEnumerable<String>) LoadManagedPluginList() Declaration void LoadManagedPluginList() WriteManagedPluginList() Declaration void WriteManagedPluginList()"
  },
  "api/kumaS.NuGetImporter.Editor.PackageControllerAsUPM.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageControllerAsUPM.html",
    "title": "Class PackageControllerAsUPM | NuGet importer for Unity documentation",
    "keywords": "Class PackageControllerAsUPM Inheritance Object PackageControllerBase PackageControllerAsUPM Inherited Members PackageControllerBase.serializer PackageControllerBase.deleteDirectories PackageControllerBase.PathSolver PackageControllerBase.UninstallManagedPackagesAsync(IEnumerable<Package>) PackageControllerBase.OperateWithNativeAsync(IEnumerable<Package>, IEnumerable<Package>, ICollection<Package>, IEnumerable<Package>, IEnumerable<Package>) PackageControllerBase.GetLoadableAsmInPackage(String, PackageManagedPluginList) PackageControllerBase.ExtractPackageAsync(Package) PackageControllerBase.ManagedPluginProcess(Package, String, String, String) PackageControllerBase.SelectManagedDirectory(String, String[], List<String>) PackageControllerBase.GetSuitFramework(String, String[], List<String>) PackageControllerBase.LocalizeDirectoryProcess(String, String, String) PackageControllerBase.NativeProcess(String, String, String) PackageControllerBase.AnalyzerProcess(String, String) PackageControllerBase.GroupLocalizedDirectory(String) PackageControllerBase.UninstallManagedPackageAsync(Package) PackageControllerBase.DeleteDirectory(String) PackageControllerBase.DeleteFile(String) PackageControllerBase.MoveDirectory(String, String, String) PackageControllerBase.CreateDeleteNativeProcess(IEnumerable<String>, IEnumerable<String>) PackageControllerBase.EnableArch Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax sealed class PackageControllerAsUPM : PackageControllerBase Constructors PackageControllerAsUPM() Declaration public PackageControllerAsUPM() Methods DeletePluginsOutOfDirectory(Package) Remove plugins outside the specified directory. 規定ディレクトリ外のプラグインを削除する。 Declaration override void DeletePluginsOutOfDirectory(Package package) Parameters Type Name Description Package package Package. パッケージ。 Overrides PackageControllerBase.DeletePluginsOutOfDirectory(Package) InstallPackageAsync(Package, IEnumerable<String>) Install the specified package. 指定パッケージをインストールする。 Declaration override async Task<(bool isSkipped, Package package, PackageManagedPluginList asm)> InstallPackageAsync(Package package, IEnumerable<string> loadedAsmName) Parameters Type Name Description Package package Package to install. インストールするパッケージ。 IEnumerable<String> loadedAsmName Returns Type Description Task<(T1, T2, T3)<Boolean, Package, PackageManagedPluginList>> Overrides PackageControllerBase.InstallPackageAsync(Package, IEnumerable<String>)"
  },
  "api/kumaS.NuGetImporter.Editor.PackageControllerBase.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageControllerBase.html",
    "title": "Class PackageControllerBase | NuGet importer for Unity documentation",
    "keywords": "Class PackageControllerBase Inheritance Object PackageControllerBase PackageControllerAsAsset PackageControllerAsUPM Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax abstract class PackageControllerBase Fields deleteDirectories Declaration readonly string[] deleteDirectories Field Value Type Description String[] EnableArch Declaration static readonly Dictionary<string, List<string>> EnableArch Field Value Type Description Dictionary<String, List<String>> serializer Declaration readonly XmlSerializer serializer Field Value Type Description XmlSerializer Properties PathSolver Declaration protected PackagePathSolverBase PathSolver { get; set; } Property Value Type Description PackagePathSolverBase Methods AnalyzerProcess(String, String) Declaration void AnalyzerProcess(string extractPath, string nugetPackagePath) Parameters Type Name Description String extractPath String nugetPackagePath CreateDeleteNativeProcess(IEnumerable<String>, IEnumerable<String>) Create process that delete native packages. ネイティブのパッケージを削除するプロセスを作成。 Declaration Process CreateDeleteNativeProcess(IEnumerable<string> directoryPaths, IEnumerable<string> nugetDirectoryPaths) Parameters Type Name Description IEnumerable<String> directoryPaths Directory paths to delete. 削除するディレクトリのパス。 IEnumerable<String> nugetDirectoryPaths Directory paths to delete in NuGet/. 削除するNuGet内のディレクトリのパス。 Returns Type Description Process The process of removing native plugins. ネイティブプラグインを削除するプロセス。 DeleteDirectory(String) Delete directory without native plugins. ディレクトリを削除する。（ネイティブプラグインのない） Declaration protected void DeleteDirectory(string path) Parameters Type Name Description String path Directory path to delete. 削除するディレクトリのパス。 DeleteFile(String) Delete file that is not native plugin. ファイルを削除する。（ネイティブプラグインでない） Declaration protected void DeleteFile(string path) Parameters Type Name Description String path File path to delete. 削除するファイルのパス。 DeletePluginsOutOfDirectory(Package) Remove plugins outside the specified directory. 規定ディレクトリ外のプラグインを削除する。 Declaration abstract void DeletePluginsOutOfDirectory(Package package) Parameters Type Name Description Package package Package. パッケージ。 ExtractPackageAsync(Package) Extract the package to the specified directory. パッケージを指定のディレクトリに展開する。 Declaration protected async Task ExtractPackageAsync(Package package) Parameters Type Name Description Package package Packages to be extracted. 展開するパッケージ。 Returns Type Description Task Exceptions Type Condition System.IO.DirectoryNotFoundException Thrown when the target directory path does not exist. 展開先のディレクトリが存在しないときに投げられる。 GetLoadableAsmInPackage(String, PackageManagedPluginList) Get the loadable assemblies in the package. パッケージにあるロード可能なアセンブリを取得。 Declaration protected void GetLoadableAsmInPackage(string searchPath, PackageManagedPluginList asm) Parameters Type Name Description String searchPath Extract path. 展開したパス。 PackageManagedPluginList asm Loadable assemblies. ロード可能なアセンブリ。 GetSuitFramework(String, String[], List<String>) Get just the right framework. ちょうどよいフレームワークを取得。 Declaration (string suit, List<string> removes) GetSuitFramework(string frameworkDir, string[] targetFramework, List<string> frameworkList) Parameters Type Name Description String frameworkDir Directory where the framework is located. フレームワークがあるディレクトリ。 String[] targetFramework Package target framework. パッケージのターゲットフレームワーク。 List<String> frameworkList List of frameworks available for Unity. Unityで利用可能なフレームワーク一覧。 Returns Type Description (T1, T2)<String, List<String>> Just the right framework.Directory to be removed. ちょうどよいフレームワーク。取り除くディレクトリ。 GroupLocalizedDirectory(String) Group localization with the same resources. 同じリソースのローカライズをグループ化する。 Declaration List<List<string>> GroupLocalizedDirectory(string managedPath) Parameters Type Name Description String managedPath Path of the managed plugin. マネージドプラグインのパス。 Returns Type Description List<List<String>> Grouped directories. グループ化されたディレクトリ。 InstallPackageAsync(Package, IEnumerable<String>) Install the specified package. 指定パッケージをインストールする。 Declaration abstract Task<(bool isSkipped, Package package, PackageManagedPluginList asm)> InstallPackageAsync(Package package, IEnumerable<string> loadedAsmName) Parameters Type Name Description Package package Package to install. インストールするパッケージ。 IEnumerable<String> loadedAsmName Returns Type Description Task<(T1, T2, T3)<Boolean, Package, PackageManagedPluginList>> LocalizeDirectoryProcess(String, String, String) Declaration void LocalizeDirectoryProcess(string nugetPackagePath, string extractPath, string localizePath) Parameters Type Name Description String nugetPackagePath String extractPath String localizePath ManagedPluginProcess(Package, String, String, String) Declaration void ManagedPluginProcess(Package package, string nugetPackagePath, string extractPath, string managedPath) Parameters Type Name Description Package package String nugetPackagePath String extractPath String managedPath MoveDirectory(String, String, String) Move the directory out of the project. ディレクトリをプロジェクト外へ移動する。（ネイティブプラグインのない） Declaration protected void MoveDirectory(string path, string extractPath, string nugetPackagePath) Parameters Type Name Description String path Directory path to move. 移動するディレクトリのパス。 String extractPath The path on which the package was extracted. パッケージが展開されたパス。 String nugetPackagePath Avoiding paths for packages. パッケージ用の退避パス。 NativeProcess(String, String, String) Declaration void NativeProcess(string nativePath, string nugetPackagePath, string extractPath) Parameters Type Name Description String nativePath String nugetPackagePath String extractPath OperateWithNativeAsync(IEnumerable<Package>, IEnumerable<Package>, ICollection<Package>, IEnumerable<Package>, IEnumerable<Package>) Operate with remove native plugins. ネイティブプラグインの削除を含む操作を行う。 Declaration async Task<Process> OperateWithNativeAsync(IEnumerable<Package> installs, IEnumerable<Package> manageds, ICollection<Package> natives, IEnumerable<Package> allInstalled, IEnumerable<Package> root) Parameters Type Name Description IEnumerable<Package> installs Packages to install. インストールするパッケージ。 IEnumerable<Package> manageds Packages of only managed plugins to be removed. 削除するマネージドプラグインのみのパッケージ。 ICollection<Package> natives Packages that contain native plugins to be removed. 削除するネイティブプラグインを含むパッケージ。 IEnumerable<Package> allInstalled All installed packages. 全てのインストールされたパッケージ。 IEnumerable<Package> root Root package. ルートのパッケージ。 Returns Type Description Task<Process> The process of removing native plugins. ネイティブプラグインを削除するプロセス。 SelectManagedDirectory(String, String[], List<String>) Delete just the right framework, leaving only the directory. ちょうどよいフレームワークをディレクトリのみ残して消す。 Declaration (string path, string framework) SelectManagedDirectory(string managedPath, string[] targetFramework, List<string> frameworkList) Parameters Type Name Description String managedPath Directory where managed plugins are located. マネージドプラグインがあるディレクトリ。 String[] targetFramework Package target framework. パッケージのターゲットフレームワーク。 List<String> frameworkList List of frameworks available for Unity. Unityで利用可能なフレームワーク一覧。 Returns Type Description (T1, T2)<String, String> Paths left.Just the right framework. 残したパス。ちょうどよいフレームワーク。 UninstallManagedPackageAsync(Package) Uninstall the managed plugin package. マネージドプラグインのパッケージをアンインストールする。 Declaration async Task UninstallManagedPackageAsync(Package package) Parameters Type Name Description Package package Package to be uninstalled. アンインストールするパッケージ。 Returns Type Description Task UninstallManagedPackagesAsync(IEnumerable<Package>) Uninstall the managed plugin package. マネージドプラグインのパッケージをアンインストールする。 Declaration async Task UninstallManagedPackagesAsync(IEnumerable<Package> packages) Parameters Type Name Description IEnumerable<Package> packages Package to be uninstalled. アンインストールするパッケージ。 Returns Type Description Task"
  },
  "api/kumaS.NuGetImporter.Editor.PackageDataExtensionToGUI.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageDataExtensionToGUI.html",
    "title": "Class PackageDataExtensionToGUI | NuGet importer for Unity documentation",
    "keywords": "Class PackageDataExtensionToGUI Class that provides extend methods to display the package information as a GUI. パッケージの情報をGUIとして表示する拡張メソッドを提供するクラス。 Inheritance object PackageDataExtensionToGUI Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax public static class PackageDataExtensionToGUI Methods | Edit this page View Source DeleteCache() Delete icon cache. アイコンのキャッシュを削除する。 Declaration public static void DeleteCache() | Edit this page View Source GetIcon(Catalog, string) Get the icon for this package. このパッケージのアイコンを取得する。 Declaration public static Task GetIcon(this Catalog data, string installedVersion) Parameters Type Name Description Catalog data Package infomation. パッケージ情報。 string installedVersion Returns Type Description Task Task | Edit this page View Source GetIcon(Datum) Get the icon for this package. このパッケージのアイコンを取得する。 Declaration public static Task GetIcon(this Datum data) Parameters Type Name Description Datum data Package infomation. パッケージ情報。 Returns Type Description Task Task | Edit this page View Source SetTimeout(TimeSpan) Set Timeout. タイムアウト時間を再設定。 Declaration public static Task SetTimeout(TimeSpan timeout) Parameters Type Name Description TimeSpan timeout Returns Type Description Task"
  },
  "api/kumaS.NuGetImporter.Editor.PackageManager.OperateLock.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageManager.OperateLock.html",
    "title": "Class PackageManager.OperateLock | NuGet importer for Unity documentation",
    "keywords": "Class PackageManager.OperateLock Inheritance object PackageManager.OperateLock Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax public sealed class PackageManager.OperateLock : IDisposable Constructors | Edit this page View Source OperateLock() Declaration public OperateLock() Fields | Edit this page View Source result Declaration public OperationState result Field Value Type Description OperationState Properties | Edit this page View Source IsInvalid Declaration public bool IsInvalid { get; } Property Value Type Description bool Methods | Edit this page View Source Dispose() Declaration public void Dispose() Implements IDisposable"
  },
  "api/kumaS.NuGetImporter.Editor.PackageManager.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageManager.html",
    "title": "Class PackageManager | NuGet importer for Unity documentation",
    "keywords": "Class PackageManager Class for managing packages. パッケージを管理するクラス。 Inheritance object PackageManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax public static class PackageManager Properties | Edit this page View Source ControlledPackages Declaration public static ReadOnlyControlledPackages ControlledPackages { get; } Property Value Type Description ReadOnlyControlledPackages | Edit this page View Source DataPath Thread-safe Application.dataPath. スレッドセーフなApplication.dataPath。 Declaration public static string DataPath { get; } Property Value Type Description string | Edit this page View Source InstalledCatalog Declaration public static IReadOnlyDictionary<string, Catalog> InstalledCatalog { get; } Property Value Type Description IReadOnlyDictionary<string, Catalog> Methods | Edit this page View Source Boot() Declaration [InitializeOnLoadMethod] public static void Boot() | Edit this page View Source ChangePackageVersionAsync(string, string, bool, VersionSelectMethod) Change the version of the specified package. 指定したパッケージのバージョンを変更する。 Declaration public static Task<OperationResult> ChangePackageVersionAsync(string packageId, string newVersion, bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description string packageId Package id. パッケージのid。 string newVersion Version after change. 変更後のバージョン。 bool onlyStable Whether use only stable version. 安定版のみつかうか。 VersionSelectMethod method Method to select a version. バージョンを選択する方法。 Returns Type Description Task<OperationResult> Operation result. 操作結果。 | Edit this page View Source CleanUp() Uninstall the packages installed with this plugin and initialize the internal data. このプラグインでインストールしたパッケージを削除し、内部データを初期化する。 Declaration public static Task<OperationResult> CleanUp() Returns Type Description Task<OperationResult> | Edit this page View Source ConvertToAssets() Move the packages from under UPM to under Asset. パッケージをUPM下からAsset下に移す。 Declaration public static Task<OperationResult> ConvertToAssets() Returns Type Description Task<OperationResult> Operation result. 操作結果。 | Edit this page View Source ConvertToUPM() Move the packages from under Asset to under UPM. パッケージをAsset下からUPM下に移す。 Declaration public static Task<OperationResult> ConvertToUPM() Returns Type Description Task<OperationResult> Operation result. 操作結果。 | Edit this page View Source FixPackageAsync(string, bool) Repair the specified package. 指定されたパッケージを修復する。 Declaration public static Task<OperationResult> FixPackageAsync(string packageId, bool confirm = true) Parameters Type Name Description string packageId Package id. パッケージのid。 bool confirm Confirm to user. 確認を行うか。 Returns Type Description Task<OperationResult> Operation result. 操作結果。 | Edit this page View Source FixPackagesAsync(bool) Fix as follows in package.config. package.configの通りに修復する。 Declaration public static Task<OperationResult> FixPackagesAsync(bool confirm = true) Parameters Type Name Description bool confirm Confirm to user. 確認を行うか。 Returns Type Description Task<OperationResult> Operation result. 操作結果。 | Edit this page View Source InstallPackageAsync(string, string, bool, VersionSelectMethod) Install the specified package. 指定されたパッケージをインストールする。 Declaration public static Task<OperationResult> InstallPackageAsync(string packageId, string version, bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description string packageId Package id. パッケージのid。 string version The version of the package to install. インストールするパッケージのバージョン。 bool onlyStable Whether use only stable version. 安定版のみつかうか。 VersionSelectMethod method Method to select a version. バージョンを選択する方法。 Returns Type Description Task<OperationResult> Operation result. 操作結果。 | Edit this page View Source IsNeedToFix() Check that the packages listed in package.config are installed. package.configに記載されているパッケージがインストールされているか確認する。 Declaration public static Task<bool> IsNeedToFix() Returns Type Description Task<bool> Is need to fix? 全てインストールされておらず修復の必要があるか。 | Edit this page View Source IsPackageCorrectlyInstalled(Package) Does the directory for the specified package exist? 指定したパッケージのディレクトリは存在するか。 Declaration public static Task<bool> IsPackageCorrectlyInstalled(Package package) Parameters Type Name Description Package package Returns Type Description Task<bool> | Edit this page View Source Load() Load the package installation information. パッケージのインストール情報を読み込む。 Declaration public static void Load() | Edit this page View Source ReInstallAllPackages(bool, VersionSelectMethod) Reinstall based on the current root package. 現在のルートパッケージを元に再インストールする。 Declaration public static Task<OperationResult> ReInstallAllPackages(bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description bool onlyStable Whether use only stable version. 安定版のみつかうか。 VersionSelectMethod method Method to select a version. バージョンを選択する方法。 Returns Type Description Task<OperationResult> Operation result. 操作結果。 | Edit this page View Source Save() Save the package installation information. パッケージのインストール情報を保存する。 Declaration public static void Save() | Edit this page View Source UninstallPackagesAsync(string, bool, VersionSelectMethod) Uninstall the specified package. 指定したパッケージをアンインストールする。 Declaration public static Task<OperationResult> UninstallPackagesAsync(string packageId, bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description string packageId Package id. パッケージのid。 bool onlyStable Whether use only stable version. 安定版のみつかうか。 VersionSelectMethod method Method to select a version. バージョンを選択する方法。 Returns Type Description Task<OperationResult> Operation result. 操作結果。"
  },
  "api/kumaS.NuGetImporter.Editor.PackageOperation.ChangePackageVersion.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageOperation.ChangePackageVersion.html",
    "title": "Class ChangePackageVersion | NuGet importer for Unity documentation",
    "keywords": "Class ChangePackageVersion Change the version of the specified package. 指定したパッケージのバージョンを変更する。 Inheritance Object OperatePackage ChangePackageVersion Inherited Members OperatePackage._isOperated OperatePackage.IsConfirmToUser OperatePackage.InstallingPackages OperatePackage.Execute() OperatePackage.ManipulatePackages(ICollection<Package>, ICollection<Package>, ICollection<Package>, ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) OperatePackage.ConfirmToUser(ICollection<Package>, ICollection<Package>, IEnumerable<Package>, ReadOnlyControlledPackages) OperatePackage.Rollback(ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) Namespace: kumaS.NuGetImporter.Editor.PackageOperation Assembly: kumaS.NuGetImporter.Editor.dll Syntax sealed class ChangePackageVersion : OperatePackage Constructors ChangePackageVersion(String, String, Boolean, VersionSelectMethod) Declaration public ChangePackageVersion(string packageId, string installVersion, bool isOnlyStable = true, VersionSelectMethod versionSelect = VersionSelectMethod.Suit) Parameters Type Name Description String packageId String installVersion Boolean isOnlyStable VersionSelectMethod versionSelect Fields _id Declaration readonly string _id Field Value Type Description String _method Declaration readonly VersionSelectMethod _method Field Value Type Description VersionSelectMethod _onlyStable Declaration readonly bool _onlyStable Field Value Type Description Boolean _version Declaration readonly string _version Field Value Type Description String Properties FinishMessage Declaration protected override string FinishMessage { get; } Property Value Type Description String Overrides OperatePackage.FinishMessage Methods Operate(ReadOnlyControlledPackages, PackageManager.OperateLock) Operation. 操作内容。 Declaration protected override async Task<OperationResult> Operate(ReadOnlyControlledPackages controlledPackages, PackageManager.OperateLock operateLock) Parameters Type Name Description ReadOnlyControlledPackages controlledPackages List of packages currently under control. 現在制御下にあるパッケージ一覧。 PackageManager.OperateLock operateLock Returns Type Description Task<OperationResult> Operation result 操作結果。 Overrides OperatePackage.Operate(ReadOnlyControlledPackages, PackageManager.OperateLock)"
  },
  "api/kumaS.NuGetImporter.Editor.PackageOperation.CleanUp.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageOperation.CleanUp.html",
    "title": "Class CleanUp | NuGet importer for Unity documentation",
    "keywords": "Class CleanUp Uninstall the packages installed with this plugin and initialize the internal data. このプラグインでインストールしたパッケージを削除し、内部データを初期化する。 Inheritance Object OperatePackage CleanUp Inherited Members OperatePackage._isOperated OperatePackage.IsConfirmToUser OperatePackage.InstallingPackages OperatePackage.Execute() OperatePackage.ManipulatePackages(ICollection<Package>, ICollection<Package>, ICollection<Package>, ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) OperatePackage.ConfirmToUser(ICollection<Package>, ICollection<Package>, IEnumerable<Package>, ReadOnlyControlledPackages) OperatePackage.Rollback(ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) Namespace: kumaS.NuGetImporter.Editor.PackageOperation Assembly: kumaS.NuGetImporter.Editor.dll Syntax sealed class CleanUp : OperatePackage Constructors CleanUp() Declaration public CleanUp() Properties FinishMessage Declaration protected override string FinishMessage { get; } Property Value Type Description String Overrides OperatePackage.FinishMessage Methods Operate(ReadOnlyControlledPackages, PackageManager.OperateLock) Declaration protected override async Task<OperationResult> Operate(ReadOnlyControlledPackages controlledPackages, PackageManager.OperateLock operateLock) Parameters Type Name Description ReadOnlyControlledPackages controlledPackages PackageManager.OperateLock operateLock Returns Type Description Task<OperationResult> Overrides OperatePackage.Operate(ReadOnlyControlledPackages, PackageManager.OperateLock)"
  },
  "api/kumaS.NuGetImporter.Editor.PackageOperation.ConvertToAssets.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageOperation.ConvertToAssets.html",
    "title": "Class ConvertToAssets | NuGet importer for Unity documentation",
    "keywords": "Class ConvertToAssets Move the packages from under UPM to under Asset. パッケージをUPM下からAsset下に移す。 Inheritance Object OperatePackage ConvertToAssets Inherited Members OperatePackage._isOperated OperatePackage.IsConfirmToUser OperatePackage.InstallingPackages OperatePackage.Execute() OperatePackage.ManipulatePackages(ICollection<Package>, ICollection<Package>, ICollection<Package>, ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) OperatePackage.ConfirmToUser(ICollection<Package>, ICollection<Package>, IEnumerable<Package>, ReadOnlyControlledPackages) OperatePackage.Rollback(ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) Namespace: kumaS.NuGetImporter.Editor.PackageOperation Assembly: kumaS.NuGetImporter.Editor.dll Syntax sealed class ConvertToAssets : OperatePackage Constructors ConvertToAssets() Declaration public ConvertToAssets() Properties FinishMessage Declaration protected override string FinishMessage { get; } Property Value Type Description String Overrides OperatePackage.FinishMessage Methods Operate(ReadOnlyControlledPackages, PackageManager.OperateLock) Declaration protected override async Task<OperationResult> Operate(ReadOnlyControlledPackages controlledPackages, PackageManager.OperateLock operateLock) Parameters Type Name Description ReadOnlyControlledPackages controlledPackages PackageManager.OperateLock operateLock Returns Type Description Task<OperationResult> Overrides OperatePackage.Operate(ReadOnlyControlledPackages, PackageManager.OperateLock)"
  },
  "api/kumaS.NuGetImporter.Editor.PackageOperation.ConvertToUPM.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageOperation.ConvertToUPM.html",
    "title": "Class ConvertToUPM | NuGet importer for Unity documentation",
    "keywords": "Class ConvertToUPM Move the packages from under Asset to under UPM. パッケージをAsset下からUPM下に移す。 Inheritance Object OperatePackage ConvertToUPM Inherited Members OperatePackage._isOperated OperatePackage.IsConfirmToUser OperatePackage.InstallingPackages OperatePackage.Execute() OperatePackage.ManipulatePackages(ICollection<Package>, ICollection<Package>, ICollection<Package>, ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) OperatePackage.ConfirmToUser(ICollection<Package>, ICollection<Package>, IEnumerable<Package>, ReadOnlyControlledPackages) OperatePackage.Rollback(ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) Namespace: kumaS.NuGetImporter.Editor.PackageOperation Assembly: kumaS.NuGetImporter.Editor.dll Syntax sealed class ConvertToUPM : OperatePackage Constructors ConvertToUPM() Declaration public ConvertToUPM() Properties FinishMessage Declaration protected override string FinishMessage { get; } Property Value Type Description String Overrides OperatePackage.FinishMessage Methods Operate(ReadOnlyControlledPackages, PackageManager.OperateLock) Declaration protected override async Task<OperationResult> Operate(ReadOnlyControlledPackages controlledPackages, PackageManager.OperateLock operateLock) Parameters Type Name Description ReadOnlyControlledPackages controlledPackages PackageManager.OperateLock operateLock Returns Type Description Task<OperationResult> Overrides OperatePackage.Operate(ReadOnlyControlledPackages, PackageManager.OperateLock)"
  },
  "api/kumaS.NuGetImporter.Editor.PackageOperation.FixPackages.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageOperation.FixPackages.html",
    "title": "Class FixPackages | NuGet importer for Unity documentation",
    "keywords": "Class FixPackages Fix as follows in package.config. package.configの通りに修復する。 Inheritance Object OperatePackage FixPackages Inherited Members OperatePackage._isOperated OperatePackage.IsConfirmToUser OperatePackage.InstallingPackages OperatePackage.Execute() OperatePackage.ManipulatePackages(ICollection<Package>, ICollection<Package>, ICollection<Package>, ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) OperatePackage.ConfirmToUser(ICollection<Package>, ICollection<Package>, IEnumerable<Package>, ReadOnlyControlledPackages) OperatePackage.Rollback(ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) Namespace: kumaS.NuGetImporter.Editor.PackageOperation Assembly: kumaS.NuGetImporter.Editor.dll Syntax sealed class FixPackages : OperatePackage Constructors FixPackages(Boolean) Declaration public FixPackages(bool confirm = true) Parameters Type Name Description Boolean confirm Properties FinishMessage Declaration protected override string FinishMessage { get; } Property Value Type Description String Overrides OperatePackage.FinishMessage Methods Operate(ReadOnlyControlledPackages, PackageManager.OperateLock) Operation. 操作内容。 Declaration protected override async Task<OperationResult> Operate(ReadOnlyControlledPackages controlledPackages, PackageManager.OperateLock operateLock) Parameters Type Name Description ReadOnlyControlledPackages controlledPackages List of packages currently under control. 現在制御下にあるパッケージ一覧。 PackageManager.OperateLock operateLock Returns Type Description Task<OperationResult> Operation result 操作結果。 Overrides OperatePackage.Operate(ReadOnlyControlledPackages, PackageManager.OperateLock)"
  },
  "api/kumaS.NuGetImporter.Editor.PackageOperation.FixSpecifiedPackage.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageOperation.FixSpecifiedPackage.html",
    "title": "Class FixSpecifiedPackage | NuGet importer for Unity documentation",
    "keywords": "Class FixSpecifiedPackage Repair the specified package. 指定されたパッケージを修復する。 Inheritance Object OperatePackage FixSpecifiedPackage Inherited Members OperatePackage._isOperated OperatePackage.IsConfirmToUser OperatePackage.InstallingPackages OperatePackage.Execute() OperatePackage.ManipulatePackages(ICollection<Package>, ICollection<Package>, ICollection<Package>, ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) OperatePackage.ConfirmToUser(ICollection<Package>, ICollection<Package>, IEnumerable<Package>, ReadOnlyControlledPackages) OperatePackage.Rollback(ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) Namespace: kumaS.NuGetImporter.Editor.PackageOperation Assembly: kumaS.NuGetImporter.Editor.dll Syntax sealed class FixSpecifiedPackage : OperatePackage Constructors FixSpecifiedPackage(String, Boolean) Declaration public FixSpecifiedPackage(string packageId, bool confirm = true) Parameters Type Name Description String packageId Boolean confirm Fields id Declaration readonly string id Field Value Type Description String Properties FinishMessage Declaration protected override string FinishMessage { get; } Property Value Type Description String Overrides OperatePackage.FinishMessage Methods Operate(ReadOnlyControlledPackages, PackageManager.OperateLock) Operation. 操作内容。 Declaration protected override async Task<OperationResult> Operate(ReadOnlyControlledPackages controlledPackages, PackageManager.OperateLock operateLock) Parameters Type Name Description ReadOnlyControlledPackages controlledPackages List of packages currently under control. 現在制御下にあるパッケージ一覧。 PackageManager.OperateLock operateLock Returns Type Description Task<OperationResult> Operation result 操作結果。 Overrides OperatePackage.Operate(ReadOnlyControlledPackages, PackageManager.OperateLock)"
  },
  "api/kumaS.NuGetImporter.Editor.PackageOperation.InstallPackage.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageOperation.InstallPackage.html",
    "title": "Class InstallPackage | NuGet importer for Unity documentation",
    "keywords": "Class InstallPackage Install the package. パッケージをインストールする。 Inheritance Object OperatePackage InstallPackage Inherited Members OperatePackage._isOperated OperatePackage.IsConfirmToUser OperatePackage.InstallingPackages OperatePackage.Execute() OperatePackage.ManipulatePackages(ICollection<Package>, ICollection<Package>, ICollection<Package>, ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) OperatePackage.ConfirmToUser(ICollection<Package>, ICollection<Package>, IEnumerable<Package>, ReadOnlyControlledPackages) OperatePackage.Rollback(ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) Namespace: kumaS.NuGetImporter.Editor.PackageOperation Assembly: kumaS.NuGetImporter.Editor.dll Syntax sealed class InstallPackage : OperatePackage Constructors InstallPackage(String, String, Boolean, VersionSelectMethod) Declaration public InstallPackage(string packageId, string installVersion, bool isOnlyStable = true, VersionSelectMethod versionSelect = VersionSelectMethod.Suit) Parameters Type Name Description String packageId String installVersion Boolean isOnlyStable VersionSelectMethod versionSelect Fields _id Declaration readonly string _id Field Value Type Description String _method Declaration readonly VersionSelectMethod _method Field Value Type Description VersionSelectMethod _onlyStable Declaration readonly bool _onlyStable Field Value Type Description Boolean _version Declaration readonly string _version Field Value Type Description String Properties FinishMessage Declaration protected override string FinishMessage { get; } Property Value Type Description String Overrides OperatePackage.FinishMessage Methods Operate(ReadOnlyControlledPackages, PackageManager.OperateLock) Declaration protected override async Task<OperationResult> Operate(ReadOnlyControlledPackages controlledPackages, PackageManager.OperateLock operateLock) Parameters Type Name Description ReadOnlyControlledPackages controlledPackages PackageManager.OperateLock operateLock Returns Type Description Task<OperationResult> Overrides OperatePackage.Operate(ReadOnlyControlledPackages, PackageManager.OperateLock)"
  },
  "api/kumaS.NuGetImporter.Editor.PackageOperation.OperatePackage.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageOperation.OperatePackage.html",
    "title": "Class OperatePackage | NuGet importer for Unity documentation",
    "keywords": "Class OperatePackage Base class for operating packages. Implement FindOperatePackages when operating on packages. Remember to change onlyStable and method. パッケージを操作する際の基底クラス。パッケージを操作する際は FindOperatePackages を実装。onlyStable, method の変更を忘れないように。 Inheritance Object OperatePackage ChangePackageVersion CleanUp ConvertToAssets ConvertToUPM FixPackages FixSpecifiedPackage InstallPackage RebootProcess ReInstallAllPackages UninstallPackages Namespace: kumaS.NuGetImporter.Editor.PackageOperation Assembly: kumaS.NuGetImporter.Editor.dll Syntax abstract class OperatePackage Fields _isOperated Declaration bool _isOperated Field Value Type Description Boolean InstallingPackages Declaration protected readonly List<Package> InstallingPackages Field Value Type Description List<Package> IsConfirmToUser Declaration protected bool IsConfirmToUser Field Value Type Description Boolean Properties FinishMessage Declaration protected virtual string FinishMessage { get; } Property Value Type Description String Methods ConfirmToUser(ICollection<Package>, ICollection<Package>, IEnumerable<Package>, ReadOnlyControlledPackages) Confirm the package change to the user. ユーザーへパッケージ変更の確認を行う。 Declaration static async Task<bool> ConfirmToUser(ICollection<Package> installPackages, ICollection<Package> uninstallPackages, IEnumerable<Package> nativePackages, ReadOnlyControlledPackages controlledPackages) Parameters Type Name Description ICollection<Package> installPackages New package to be installed. 新たにインストールするパッケージ。 ICollection<Package> uninstallPackages Package to uninstall. アンインストールするパッケージ。 IEnumerable<Package> nativePackages Packages that include native plug-ins in the package to be deleted. 削除するパッケージの中でネイティブプラグインを含むパッケージ。 ReadOnlyControlledPackages controlledPackages Returns Type Description Task<Boolean> Return true when the user agrees. ユーザーが了解したか。 Execute() Execute operations to packages. パッケージの操作を行う。 Declaration public async Task<OperationResult> Execute() Returns Type Description Task<OperationResult> Operation result. 操作結果。 Exceptions Type Condition System.InvalidOperationException It is thrown if the operation has already been executed in this instance. 既にこのインスタンスで操作済みの場合スローされる。 ManipulatePackages(ICollection<Package>, ICollection<Package>, ICollection<Package>, ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) Notify users and manipulate packages by given arguments. 与えられた引数を元にユーザーへ通知・パッケージを操作を行う。 Declaration protected async Task<OperationResult> ManipulatePackages(ICollection<Package> rootPackages, ICollection<Package> installPackages, ICollection<Package> deletePackages, ReadOnlyControlledPackages controlledPackages, PackageManager.OperateLock operateLock, PackageControllerBase controller = null) Parameters Type Name Description ICollection<Package> rootPackages Root packages. ルートとなるパッケージ。 ICollection<Package> installPackages Installing packages. インストールするパッケージ。 ICollection<Package> deletePackages deleting packages. 削除するパッケージ。 ReadOnlyControlledPackages controlledPackages List of packages under management. 管理下にあるパッケージ一覧。 PackageManager.OperateLock operateLock Lock for operation. 操作を行うためのロック。 PackageControllerBase controller Controller to operate. 操作を行うコントローラー。 Returns Type Description Task<OperationResult> Manipulate result. 操作結果。 Operate(ReadOnlyControlledPackages, PackageManager.OperateLock) Operation. 操作内容。 Declaration protected abstract Task<OperationResult> Operate(ReadOnlyControlledPackages controlledPackages, PackageManager.OperateLock operateLock) Parameters Type Name Description ReadOnlyControlledPackages controlledPackages List of packages currently under control. 現在制御下にあるパッケージ一覧。 PackageManager.OperateLock operateLock Returns Type Description Task<OperationResult> Operation result 操作結果。 Rollback(ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) Rollback for this operation. この操作に対するロールバックを行う。 Declaration protected async Task Rollback(ReadOnlyControlledPackages controlledPackages, PackageManager.OperateLock operatorLock, PackageControllerBase controller = null) Parameters Type Name Description ReadOnlyControlledPackages controlledPackages PackageManager.OperateLock operatorLock Lock for this operation. この操作のために取得したロック。 PackageControllerBase controller PackageController used for this operation. この操作で使用したパッケージコントローラー。 Returns Type Description Task"
  },
  "api/kumaS.NuGetImporter.Editor.PackageOperation.ReInstallAllPackages.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageOperation.ReInstallAllPackages.html",
    "title": "Class ReInstallAllPackages | NuGet importer for Unity documentation",
    "keywords": "Class ReInstallAllPackages Inheritance Object OperatePackage ReInstallAllPackages Inherited Members OperatePackage._isOperated OperatePackage.IsConfirmToUser OperatePackage.InstallingPackages OperatePackage.Execute() OperatePackage.ManipulatePackages(ICollection<Package>, ICollection<Package>, ICollection<Package>, ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) OperatePackage.ConfirmToUser(ICollection<Package>, ICollection<Package>, IEnumerable<Package>, ReadOnlyControlledPackages) OperatePackage.Rollback(ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) Namespace: kumaS.NuGetImporter.Editor.PackageOperation Assembly: kumaS.NuGetImporter.Editor.dll Syntax sealed class ReInstallAllPackages : OperatePackage Constructors ReInstallAllPackages(Boolean, VersionSelectMethod) Declaration public ReInstallAllPackages(bool onlyStable = true, VersionSelectMethod method = VersionSelectMethod.Suit) Parameters Type Name Description Boolean onlyStable VersionSelectMethod method Fields _isOnlyStable Declaration readonly bool _isOnlyStable Field Value Type Description Boolean _versionSelectMethod Declaration readonly VersionSelectMethod _versionSelectMethod Field Value Type Description VersionSelectMethod Properties FinishMessage Declaration protected override string FinishMessage { get; } Property Value Type Description String Overrides OperatePackage.FinishMessage Methods Operate(ReadOnlyControlledPackages, PackageManager.OperateLock) Declaration protected override async Task<OperationResult> Operate(ReadOnlyControlledPackages controlledPackages, PackageManager.OperateLock operateLock) Parameters Type Name Description ReadOnlyControlledPackages controlledPackages PackageManager.OperateLock operateLock Returns Type Description Task<OperationResult> Overrides OperatePackage.Operate(ReadOnlyControlledPackages, PackageManager.OperateLock)"
  },
  "api/kumaS.NuGetImporter.Editor.PackageOperation.RebootProcess.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageOperation.RebootProcess.html",
    "title": "Class RebootProcess | NuGet importer for Unity documentation",
    "keywords": "Class RebootProcess Processes the startup process after a reboot. 再起動を行った後の起動時の処理を行う。 Inheritance Object OperatePackage RebootProcess Inherited Members OperatePackage._isOperated OperatePackage.IsConfirmToUser OperatePackage.InstallingPackages OperatePackage.Execute() OperatePackage.ManipulatePackages(ICollection<Package>, ICollection<Package>, ICollection<Package>, ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) OperatePackage.ConfirmToUser(ICollection<Package>, ICollection<Package>, IEnumerable<Package>, ReadOnlyControlledPackages) OperatePackage.Rollback(ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) Namespace: kumaS.NuGetImporter.Editor.PackageOperation Assembly: kumaS.NuGetImporter.Editor.dll Syntax sealed class RebootProcess : OperatePackage Constructors RebootProcess(InstalledPackages, InstalledPackages, InstalledPackages) Declaration public RebootProcess(InstalledPackages willInstall, InstalledPackages willRoot, InstalledPackages rollbackPackages) Parameters Type Name Description InstalledPackages willInstall InstalledPackages willRoot InstalledPackages rollbackPackages Fields install Declaration readonly InstalledPackages install Field Value Type Description InstalledPackages root Declaration readonly InstalledPackages root Field Value Type Description InstalledPackages rPackages Declaration readonly InstalledPackages rPackages Field Value Type Description InstalledPackages Properties FinishMessage Declaration protected override string FinishMessage { get; } Property Value Type Description String Overrides OperatePackage.FinishMessage Methods Operate(ReadOnlyControlledPackages, PackageManager.OperateLock) Operation. 操作内容。 Declaration protected override async Task<OperationResult> Operate(ReadOnlyControlledPackages controlledPackages, PackageManager.OperateLock operateLock) Parameters Type Name Description ReadOnlyControlledPackages controlledPackages List of packages currently under control. 現在制御下にあるパッケージ一覧。 PackageManager.OperateLock operateLock Returns Type Description Task<OperationResult> Operation result 操作結果。 Overrides OperatePackage.Operate(ReadOnlyControlledPackages, PackageManager.OperateLock)"
  },
  "api/kumaS.NuGetImporter.Editor.PackageOperation.UninstallPackages.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageOperation.UninstallPackages.html",
    "title": "Class UninstallPackages | NuGet importer for Unity documentation",
    "keywords": "Class UninstallPackages Uninstall the specified package. 指定したパッケージをアンインストールする。 Inheritance Object OperatePackage UninstallPackages Inherited Members OperatePackage._isOperated OperatePackage.IsConfirmToUser OperatePackage.InstallingPackages OperatePackage.Execute() OperatePackage.ManipulatePackages(ICollection<Package>, ICollection<Package>, ICollection<Package>, ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) OperatePackage.ConfirmToUser(ICollection<Package>, ICollection<Package>, IEnumerable<Package>, ReadOnlyControlledPackages) OperatePackage.Rollback(ReadOnlyControlledPackages, PackageManager.OperateLock, PackageControllerBase) Namespace: kumaS.NuGetImporter.Editor.PackageOperation Assembly: kumaS.NuGetImporter.Editor.dll Syntax sealed class UninstallPackages : OperatePackage Constructors UninstallPackages(String, Boolean, VersionSelectMethod) Declaration public UninstallPackages(string packageId, bool isOnlyStable = true, VersionSelectMethod versionSelect = VersionSelectMethod.Suit) Parameters Type Name Description String packageId Boolean isOnlyStable VersionSelectMethod versionSelect Fields _id Declaration readonly string _id Field Value Type Description String _method Declaration readonly VersionSelectMethod _method Field Value Type Description VersionSelectMethod _onlyStable Declaration readonly bool _onlyStable Field Value Type Description Boolean Properties FinishMessage Declaration protected override string FinishMessage { get; } Property Value Type Description String Overrides OperatePackage.FinishMessage Methods Operate(ReadOnlyControlledPackages, PackageManager.OperateLock) Operation. 操作内容。 Declaration protected override async Task<OperationResult> Operate(ReadOnlyControlledPackages controlledPackages, PackageManager.OperateLock operateLock) Parameters Type Name Description ReadOnlyControlledPackages controlledPackages List of packages currently under control. 現在制御下にあるパッケージ一覧。 PackageManager.OperateLock operateLock Returns Type Description Task<OperationResult> Operation result 操作結果。 Overrides OperatePackage.Operate(ReadOnlyControlledPackages, PackageManager.OperateLock)"
  },
  "api/kumaS.NuGetImporter.Editor.PackageOperation.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageOperation.html",
    "title": "Namespace kumaS.NuGetImporter.Editor.PackageOperation | NuGet importer for Unity documentation",
    "keywords": "Namespace kumaS.NuGetImporter.Editor.PackageOperation Classes ChangePackageVersion Change the version of the specified package. 指定したパッケージのバージョンを変更する。 CleanUp Uninstall the packages installed with this plugin and initialize the internal data. このプラグインでインストールしたパッケージを削除し、内部データを初期化する。 ConvertToAssets Move the packages from under UPM to under Asset. パッケージをUPM下からAsset下に移す。 ConvertToUPM Move the packages from under Asset to under UPM. パッケージをAsset下からUPM下に移す。 FixPackages Fix as follows in package.config. package.configの通りに修復する。 FixSpecifiedPackage Repair the specified package. 指定されたパッケージを修復する。 InstallPackage Install the package. パッケージをインストールする。 OperatePackage Base class for operating packages. Implement FindOperatePackages when operating on packages. Remember to change onlyStable and method. パッケージを操作する際の基底クラス。パッケージを操作する際は FindOperatePackages を実装。onlyStable, method の変更を忘れないように。 RebootProcess Processes the startup process after a reboot. 再起動を行った後の起動時の処理を行う。 ReInstallAllPackages UninstallPackages Uninstall the specified package. 指定したパッケージをアンインストールする。"
  },
  "api/kumaS.NuGetImporter.Editor.PackagePathSolverBase.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackagePathSolverBase.html",
    "title": "Class PackagePathSolverBase | NuGet importer for Unity documentation",
    "keywords": "Class PackagePathSolverBase Base class for resolving package paths. パッケージのパスを解決するための基底クラス。 Inheritance Object PackagePathSolverBase AssetPathSolver UPMPathSolver Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax abstract class PackagePathSolverBase Methods AnalyzerPath(Package) Get the path to the top directory of the analyzer. アナライザーのトップディレクトリのパスを取得。 Declaration async Task<string> AnalyzerPath(Package package) Parameters Type Name Description Package package Target package. 対象のパッケージ。 Returns Type Description Task<String> Path. However, if the analyzer does not exist, an empty string is returned. パス。ただしアナライザーが存在しないときは空文字列が返る。 Exceptions Type Condition System.InvalidOperationException Thrown when a package is not installed. パッケージがインストールされていないときに投げられる。 AnalyzerPath(String, String) Get the path to the top directory of the analyzer. アナライザーのトップディレクトリのパスを取得。 Declaration async Task<string> AnalyzerPath(string packageName, string version) Parameters Type Name Description String packageName Target package name. 対象のパッケージ名。 String version Target package version. 対象のパッケージバージョン。 Returns Type Description Task<String> Path. However, if the analyzer does not exist, an empty string is returned. パス。ただしアナライザーが存在しないときは空文字列が返る。 Exceptions Type Condition System.InvalidOperationException Thrown when a package is not installed. パッケージがインストールされていないときに投げられる。 AnalyzerPathInternal(String) Declaration string AnalyzerPathInternal(string installPath) Parameters Type Name Description String installPath Returns Type Description String InstallPath(Package) Get the path to the installation location. インストール先のパスを取得。 Declaration abstract Task<string> InstallPath(Package package) Parameters Type Name Description Package package Target package. 対象のパッケージ。 Returns Type Description Task<String> Path. パス。 InstallPath(String, String) Get the path to the installation location. インストール先のパスを取得。 Declaration abstract Task<string> InstallPath(string packageName, string version) Parameters Type Name Description String packageName Target package name. 対象のパッケージ名。 String version Target package version. 対象のパッケージバージョン。 Returns Type Description Task<String> Path. パス。 LibraryPath(Package) Get the path to the top directory of the library. ライブラリのトップディレクトリのパスを取得。 Declaration async Task<string> LibraryPath(Package package) Parameters Type Name Description Package package Target package. 対象のパッケージ。 Returns Type Description Task<String> Path. However, if the managed library does not exist, an empty string is returned. パス。ただしマネージドライブラリが存在しないときは空文字列が返る。 Exceptions Type Condition System.InvalidOperationException Thrown when a package is not installed. パッケージがインストールされていないときに投げられる。 LibraryPath(String, String) Get the path to the top directory of the library. ライブラリのトップディレクトリのパスを取得。 Declaration async Task<string> LibraryPath(string packageName, string version) Parameters Type Name Description String packageName Target package name. 対象のパッケージ名。 String version Target package version. 対象のパッケージバージョン。 Returns Type Description Task<String> Path. However, if the managed library does not exist, an empty string is returned. パス。ただしマネージドライブラリが存在しないときは空文字列が返る。 Exceptions Type Condition System.InvalidOperationException Thrown when a package is not installed. パッケージがインストールされていないときに投げられる。 LibraryPathInternal(String) Declaration string LibraryPathInternal(string installPath) Parameters Type Name Description String installPath Returns Type Description String UnityEditorPath(Package) Get the path to the Unity Editor directory of the library. ライブラリのUnity Editorディレクトリのパスを取得。 Declaration async Task<string> UnityEditorPath(Package package) Parameters Type Name Description Package package Target package. 対象のパッケージ。 Returns Type Description Task<String> Path. However, if the directory for Unity Editor does not exist, an empty string is returned. パス。ただしUnity Editor用のディレクトリが存在しないときは空文字列が返る。 Exceptions Type Condition System.InvalidOperationException Thrown when a package is not installed. パッケージがインストールされていないときに投げられる。 UnityEditorPath(String, String) Get the path to the Unity Editor directory of the library. ライブラリのUnity Editorディレクトリのパスを取得。 Declaration async Task<string> UnityEditorPath(string packageName, string version) Parameters Type Name Description String packageName Target package name. 対象のパッケージ名。 String version Target package version. 対象のパッケージバージョン。 Returns Type Description Task<String> Path. However, if the directory for Unity Editor does not exist, an empty string is returned. パス。ただしUnity Editor用のディレクトリが存在しないときは空文字列が返る。 Exceptions Type Condition System.InvalidOperationException Thrown when a package is not installed. パッケージがインストールされていないときに投げられる。 UnityEditorPathInternal(String) Declaration string UnityEditorPathInternal(string installPath) Parameters Type Name Description String installPath Returns Type Description String"
  },
  "api/kumaS.NuGetImporter.Editor.PackageReadyState.html": {
    "href": "api/kumaS.NuGetImporter.Editor.PackageReadyState.html",
    "title": "Class PackageReadyState | NuGet importer for Unity documentation",
    "keywords": "Class PackageReadyState A class that sets whether all packages introduced by NuGet are ready. NuGetで導入したパッケージがすべて準備完了であるか設定するクラス。 Inheritance Object PackageReadyState Implements IActiveBuildTargetChanged IOrderedCallback Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax class PackageReadyState : IActiveBuildTargetChanged, IOrderedCallback Properties callbackOrder Declaration public int callbackOrder { get; } Property Value Type Description Int32 Methods Init() Declaration [InitializeOnLoadMethod] public static void Init() OnActiveBuildTargetChanged(BuildTarget, BuildTarget) Declaration public void OnActiveBuildTargetChanged(BuildTarget previousTarget, BuildTarget newTarget) Parameters Type Name Description BuildTarget previousTarget BuildTarget newTarget SetReady() Set as ready. 準備完了状態と設定する。 Declaration static void SetReady() SetUnReady() Set as unready. 準備未完了状態と設定する。 Declaration static void SetUnReady() Implements UnityEditor.Build.IActiveBuildTargetChanged UnityEditor.Build.IOrderedCallback"
  },
  "api/kumaS.NuGetImporter.Editor.Setup.SetupPackage.html": {
    "href": "api/kumaS.NuGetImporter.Editor.Setup.SetupPackage.html",
    "title": "Class SetupPackage | NuGet importer for Unity documentation",
    "keywords": "Class SetupPackage Class to prepare to use NuGet importer. NuGet importerを使う準備をするクラス。 Inheritance object AssetPostprocessor SetupPackage Inherited Members AssetPostprocessor.LogWarning(string) AssetPostprocessor.LogWarning(string, Object) AssetPostprocessor.LogError(string) AssetPostprocessor.LogError(string, Object) AssetPostprocessor.GetVersion() AssetPostprocessor.GetPostprocessOrder() AssetPostprocessor.assetPath AssetPostprocessor.context AssetPostprocessor.assetImporter AssetPostprocessor.preview object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor.Setup Assembly: kumaS.NuGetImporter.Editor.Setup.dll Syntax public class SetupPackage : AssetPostprocessor"
  },
  "api/kumaS.NuGetImporter.Editor.Setup.html": {
    "href": "api/kumaS.NuGetImporter.Editor.Setup.html",
    "title": "Namespace kumaS.NuGetImporter.Editor.Setup | NuGet importer for Unity documentation",
    "keywords": "Namespace kumaS.NuGetImporter.Editor.Setup Classes SetupPackage Class to prepare to use NuGet importer. NuGet importerを使う準備をするクラス。"
  },
  "api/kumaS.NuGetImporter.Editor.UPMPathSolver.html": {
    "href": "api/kumaS.NuGetImporter.Editor.UPMPathSolver.html",
    "title": "Class UPMPathSolver | NuGet importer for Unity documentation",
    "keywords": "Class UPMPathSolver Class for resolving the path of packages to be installed in UPM. UPMにインストールするパッケージのパスを解決するためのクラス。 Inheritance Object PackagePathSolverBase UPMPathSolver Inherited Members PackagePathSolverBase.AnalyzerPath(Package) PackagePathSolverBase.AnalyzerPath(String, String) PackagePathSolverBase.AnalyzerPathInternal(String) PackagePathSolverBase.LibraryPath(Package) PackagePathSolverBase.LibraryPath(String, String) PackagePathSolverBase.LibraryPathInternal(String) PackagePathSolverBase.UnityEditorPath(Package) PackagePathSolverBase.UnityEditorPath(String, String) PackagePathSolverBase.UnityEditorPathInternal(String) Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax class UPMPathSolver : PackagePathSolverBase Methods InstallPath(Package) Get the path to the installation location. インストール先のパスを取得。 Declaration override Task<string> InstallPath(Package package) Parameters Type Name Description Package package Target package. 対象のパッケージ。 Returns Type Description Task<String> Path. パス。 Overrides PackagePathSolverBase.InstallPath(Package) InstallPath(String, String) Get the path to the installation location. インストール先のパスを取得。 Declaration override async Task<string> InstallPath(string packageName, string version) Parameters Type Name Description String packageName Target package name. 対象のパッケージ名。 String version Target package version. 対象のパッケージバージョン。 Returns Type Description Task<String> Path. パス。 Overrides PackagePathSolverBase.InstallPath(String, String)"
  },
  "api/kumaS.NuGetImporter.Editor.VersionDefine.html": {
    "href": "api/kumaS.NuGetImporter.Editor.VersionDefine.html",
    "title": "Class VersionDefine | NuGet importer for Unity documentation",
    "keywords": "Class VersionDefine Version defines of asmdef. asmdefのVersion defines。 Inheritance object VersionDefine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: kumaS.NuGetImporter.Editor Assembly: kumaS.NuGetImporter.Editor.dll Syntax [Serializable] public class VersionDefine Fields | Edit this page View Source define Declaration public string define Field Value Type Description string | Edit this page View Source expression Declaration public string expression Field Value Type Description string | Edit this page View Source name Declaration public string name Field Value Type Description string"
  },
  "api/kumaS.NuGetImporter.Editor.html": {
    "href": "api/kumaS.NuGetImporter.Editor.html",
    "title": "Namespace kumaS.NuGetImporter.Editor | NuGet importer for Unity documentation",
    "keywords": "Namespace kumaS.NuGetImporter.Editor Classes AssemblyDefinitionFile Assembly definition file. DependencySolver Class that provides a method to resolve package dependencies. 依存関係を解決するメソッドを提供するクラス。 GUILayoutExtention Additional GUILayout 追加(カスタム)のGUILayout NuGet Class for using NuGet API. NuGetのAPIを使うためのクラス。 NuGetAnalyzerImportSetting Class for configuring Roslyn Analyzer plugins. Roslyn Analyzerの設定をするためのクラス。 NuGetImporterSettingWindow EditorWindow class to configure settings for NuGet importer. NuGet importerの設定をするエディタウィンドウクラス。 NuGetImporterSettings NuGetImporterWindow Main window of NuGet importer. NuGet importerのメインウィンドウ。 NuGetNativeImportSetting Class for configuring native plugins introduced from NuGet. NuGetから導入したネイティブプラグインの設定をするためのクラス。 PackageDataExtensionToGUI Class that provides extend methods to display the package information as a GUI. パッケージの情報をGUIとして表示する拡張メソッドを提供するクラス。 PackageManager Class for managing packages. パッケージを管理するクラス。 PackageManager.OperateLock VersionDefine Version defines of asmdef. asmdefのVersion defines。"
  },
  "documentation/codingConventions.html": {
    "href": "documentation/codingConventions.html",
    "title": "Cording Conventions | NuGet importer for Unity documentation",
    "keywords": "Cording Conventions This project follows Microsoft's Framework Design Guidelines or C# Coding Conventions. I also define the code style used in this project in NuGetImporterForUnity/.editorconfig. If you clean up your code with this setting, you are fine as for the code style. (Please let me know if there's any part of the code style I'm not following.) Naming Guidelines The camel casing convention, used only for parameter names, capitalizes the first character of each word except the first word. The PascalCasing convention, used for all identifiers except parameter names, capitalizes the first character of each word (including acronyms over two letters in length). Choose easily readable identifier names, and DO NOT use abbreviations or contractions as part of identifier names. For more infomation, see Naming Guidelines - Microsoft. Layout Conventions Use the default Code Editor settings (smart indenting, four-character indents, tabs saved as spaces). Write only one statement per line. Write only one declaration per line. If continuation lines are not indented automatically, indent them one tab stop (four spaces). Add at least one blank line between method definitions and property definitions. Commenting Conventions Place the comment on a separate line, not at the end of a line of code. Begin comment text with an uppercase letter. End comment text with a period (except for a single noun). Implicitly Typed Variables Use implicit typing for local variables when the variable type is obvious from the right side of the assignment or when the precise type is unimportant. Do not use var when the type is not apparent from the right side of the assignment. Use implicit typing to determine the type of the loop variable in for loops. Do not use implicit typing to determine the type of the loop variable in foreach loops. using directive We must write the using directives outside of the namespace (basically at the top of the file). The order of using directives is as follows, and we should separate each group by one line. System other For example using System; using System.Collections.Generic; using System.Linq; using kumaS.NuGetImporter.Editor.DataClasses; using UnityEditor; using UnityEngine;"
  },
  "documentation/contributing.html": {
    "href": "documentation/contributing.html",
    "title": "Contribution guide | NuGet importer for Unity documentation",
    "keywords": "Contribution guide Thank you for being so interested about contribution! Let's make this project even better. Find a bug First, check for similar bugs in Issue. If not, open the Issue based on the template. Then, if I identify it as a bug, I will label it. If you want to fix a bug, please refer to the Open pull request before starting to fix it. Documentation Issue First, check for similar documentation issues in Issue. If not, open the Issue based on the template. For documentation, I will fix it, so please wait until it is applied. Have a question about usage or specifications First, check for a similar question in Issue. If not, open the Issue based on the template. Then, I'll reply to it. Have an enhancement idea First, check for a similar idea in Issue. If not, open the Issue based on the template. Discuss the enhancement idea of an open issue. You can (or should) implement it yourself, but please refer to the Open pull request before creating. Open pull request First, you fork this repository. Next, you write a code that follows the Coding Conventions. Then, after you write a code, open the pull request based on the template. Then, we will merge it as soon as it passes the test and our review."
  },
  "documentation/usage.html": {
    "href": "documentation/usage.html",
    "title": "Usage | NuGet importer for Unity documentation",
    "keywords": "Usage Getting Start There are two ways to install the package: using the UPM (Unity Package Manager) or importing the .unitypackage. via UPM (Unity Package Manager) There are two ways to install using UPM: this Git URL or OpenUPM. Use This Git URL Open the Package Manager window. Click the add (+) button in the status bar. Select Add package from git URL. Enter \"https://github.com/kumaS-nu/NuGet-importer-for-Unity.git?path=NuGetImporterForUnity/Packages/NuGet Importer\" or \"git@github.com:kumaS-nu/NuGet-importer-for-Unity.git?path=NuGetImporterForUnity/Packages/NuGet Importer\". Click Add. For more information, see the Official page (Installing from a Git URL - Unity). Use OpenUPM If you have not installed OpenUPM-CLI, run the following command to install OpenUPM-CLI. (Node.js 12 is required.) npm install -g openupm-cli Go to the unity project folder Run the following command to install \"NuGet importer for Unity\" in your project. openupm add org.kumas.nuget-importer For more information, see the Official page (Getting Started with OpenUPM-CLI - OpenUPM) via .unitypackage Go to the release page and download the zip file of the version you need. Extract the zip file and import the .unitypackage into your project. Configure of .gitignore You may want to keep installed packages out of git's tracking. In that case, you can add the following to .gitignore. NuGet-importer-for-Unity manages the list of installed packages in Asset/package.config, and you can restore packages by sharing this file. # NuGet importer /[Aa]ssets/[Pp]ackages.meta /[Aa]ssets/[Pp]ackages/ /[Nn]u[Gg]et/ /[Pp]ackages/*/ !/[Pp]ackages/your embedded package to share with git/ If you set these packages out of git's tracking, you will get a compile error when you run CI/CD. Therefore, if you want to use CI/CD with the packages out of git's tracking, you should take one of the following three ways. Add -ignoreCompilerErrors command line options when launching Unity with batch mode. Add NUGET_PACKAGE_READY to Define Constraints in .asmdef that depends on the installed package. Enclose your code that depends on the imported packages in the preprocessor directives below. #if NUGET_PACKAGE_READY // your code #endif Usage in Unity Menu item Manage packages ・・・ Open the main window for managing packages. Repair packages ・・・ Optimize the dependencies of installed packages and repair them. Delete cache ・・・ Delete the cache. (However, the cache is deleted every time the assembly is loaded.) Clean up this plugin ・・・ Delete all packages and initialize this plugin. NuGet importer settings ・・・ Open the window for configuring settings with NuGet importer. Check update ・・・ Check for updates. Go to the project page ・・・ Open the \"NuGet importer for Unity\" web page. Main window Mode to search from NuGet. Mode to search from the installed packages. Include the development version or not. Input area for search words. (Incremental search.) Search results. Package details. Version selection. Operations on the package. Ignored package or not. NuGet importer settings Specify the installation location. （We recommend using UPM.) Specify the method for determining the package version when solving dependency. (We recommend setting Suit.) Specifies whether check the package is installed at startup. If the package directory exists, NuGet-importer-for-Unity determines as the package is already installed in the project. If NuGet-importer-for-Unity finds missing packages, automatically install them. ( We recommend turning it on.) The maximum number of search results to cache. (0 or less is not cached.) The maximum number of catalogs to cache. (0 or less is not cached.) The maximum number of icons to cache. (0 or less is not cached.) Generate an Assembly Definition file for Roslyn Analyzer, allowing the scope of analysis to be specified by the Assembly Definition file. Reduce the amount of data in the communication or not. If on, images of packages not installed in the project will not fetch, and NuGet-importer-for-Unity will not perform package searches until the input has settled. The maximum number of retry attempts to get data when data fetch fails. Time out seconds of communication. List of packages to ignore. The Add button works to append a blank package. The remove button works to remove the last package. Note NuGet-importer-for-Unity install files not required at runtime (e.g., rulesets, documentation, etc.) are installed to (your project)/NuGet. If you want to reference them, add them reference manually. When importing this package into your project, this package makes the following changes. Turn off PlayerSettings -> assemblyVersionValidation. (To make Unity not check the assembly version as NuGet does.) Add reference System.IO.Compression.FileSystem.dll. (NuGet importer for Unity handles Zip files.)"
  },
  "documentation_jp/codingConventions.html": {
    "href": "documentation_jp/codingConventions.html",
    "title": "コーディング規則 | NuGet importer for Unity documentation",
    "keywords": "コーディング規則 基本的に Microsoft のフレームワークデザインのガイドラインまたは C# のコーディング規則に則っています。また、NuGetImporterForUnity/.editorconfig にてこのプロジェクトで使用するコードスタイルを定義しており、この設定でコードのクリーンアップをすれば基本的には問題ありません。（守れてないところがあったら突っ込んでください） 命名 パラメーターは Camel 記法（先頭小文字、それ以外の単語の先頭が大文字）とし、それ以外は Pascal 記法（全ての単語の先頭を大文字）としてください。命名は、読みやすい英語で短縮形を使用しないでください。 詳細は、名前付けのガイドライン - Microsoft を参照してください。（といっても日本語の翻訳がガバガバなので英語版の方が正確） レイアウト コード エディターの既定の設定（スマートインデント、4 文字インデント、タブを空白として保存）を使用します。 1つの行には1つのステートメントのみを記述します。 1つの行には1つの宣言のみを記述します。 継続行にインデントが自動的に設定されない場合は1タブストップ（4つの空白）分のインデントを設定します。 メソッド定義とプロパティ定義の間に少なくとも1行の空白行を追加します。 コメント規則 コメントは、コード行の末尾ではなく別の行に記述します。 コメントのテキストは大文字で開始します。 コメントのテキストは（名詞一個の場合を除き）ピリオドで終了します。 変数宣言 変数の型が割り当ての右側から明らかである場合、または厳密な型が重要でない場合は、ローカル変数の暗黙の型指定を使用します。 割り当ての右側から型が明らかではない場合、var を使用しません。 for ループでループ変数の型を決定するときは、暗黙の型指定を使用します。 foreach ループでループ変数の型を決定するときは、暗黙の型指定を使用しません。 usingディレクティブ usingディレクティブは namespace の外側（基本的にはファイルの先頭）に書きます。また、usingディレクティブの順番は以下の通りとし、各グループは1行づつ開けます。 System その他 例えば、以下のようになります。 using System; using System.Collections.Generic; using System.Linq; using kumaS.NuGetImporter.Editor.DataClasses; using UnityEditor; using UnityEngine;"
  },
  "documentation_jp/contributing.html": {
    "href": "documentation_jp/contributing.html",
    "title": "コントリビューションガイド | NuGet importer for Unity documentation",
    "keywords": "コントリビューションガイド コントリビューションに興味を持ってくれてありがとう！このプロジェクトをよりよいものにしていきましょう。 バグを発見した まずは、同じようなバグが Issue にないか探しましょう。もしなければ、テンプレートを元に（私は英語よわよわなので日本語で書いてくれると嬉しい）Issue を開きます。 その後、私がバグだと判定したら bug のラベルをつけます。 修正をつくる場合は、作り始める前にプルリクエストを開くを参照してください。 ドキュメントにおかしいところがある まずは、同じような指摘が Issue にないか探しましょう。もしなければ、テンプレートを元に（私は英語よわよわなので日本語で書いてくれると嬉しい）Issue を開きます。 ドキュメントに関しては私が修正するので反映されるまでお待ちください。 使い方とか仕様に関して質問がある まずは、同じような質問が Issue にないか探しましょう。もしなければ、テンプレートを元に（私は英語よわよわなので日本語で書いてくれると嬉しい）Issue を開きます。 そのうち答えます。 改善案がある まずは、同じような改善案が Issue にないか探しましょう。もしなければ、テンプレートを元に（私は英語よわよわなので日本語で書いてくれると嬉しい）Issue を開きます。 開かれた Issue の改善案に対して議論をします。自前で実装してもいい（というより推奨）ですが、機能を作る前にプルリクエストを開くを参照してください。 プルリクエストを開く まず最初に、このリポジトリをフォークしてください。次に、コーディング規則を守り機能を作ってください。機能が完成したら、テンプレートを元にプルリクエストを開いてください。テスト・私のレビューが通り次第マージされます。"
  },
  "documentation_jp/usage.html": {
    "href": "documentation_jp/usage.html",
    "title": "使い方 | NuGet importer for Unity documentation",
    "keywords": "使い方 インストール方法 パッケージをインストールするには、UPM (Unity Package Manager) を利用する、または、.unitypackage をインポートするの二通りがあります。 UPM (Unity Package Manager) を使う UPMを使って導入するには、この Git URL を指定する。または、OpenUPM を使って導入するという二通りあります。 Git URL を指定する Package Manager ウィンドウを開く ステータスバーの Add (+) ボタンをクリック Add package from git URL を選択 「https://github.com/kumaS-nu/NuGet-importer-for-Unity.git?path=NuGetImporterForUnity/Packages/NuGet Importer」または「git@github.com:kumaS-nu/NuGet-importer-for-Unity.git?path=NuGetImporterForUnity/Packages/NuGet Importer」を入力 Add をクリック 詳細は公式ページ(Git URL からのインストール - Unity)をご覧ください。 OpenUPM を利用する OpenUPM-CLI をインストールしていない場合は、以下のコマンドで OpenUPM-CLI をインストールする。(Node.js 12が必要です。) npm install -g openupm-cli インストールする予定のプロジェクトのフォルダへ移動する。 以下のコマンドで、プロジェクトにインストールする。 openupm add org.kumas.nuget-importer 詳細は公式ページ(Getting Started with OpenUPM-CLI - OpenUPM)をご覧ください。 .unitypackage で導入する リリースページへ行き、必要なバージョンのzipファイルをダウンロードする。 zipファイルを解凍し、中の .unitypackage をプロジェクトにインポートする。 .gitignoreの設定 インストールしたパッケージは Git の監理外にしたいと思います。その場合は、.gitignoreに以下を追加してください。インストールしたパッケージ一覧はAsset/package.configで管理され、このファイルを共有すればパッケージの復元ができます。 # NuGet importer /[Aa]ssets/[Pp]ackages.meta /[Aa]ssets/[Pp]ackages/ /[Nn]u[Gg]et/ /[Pp]ackages/*/ !/[Pp]ackages/your embedded package to share with git/ ただし、パッケージを Git の監理外にするとそのままではコンパイルエラーが発生し CI/CD に使用できません。 そのため、パッケージを Git の監理外にし CI/CD をする際は以下の3つの対応策のうちどれかを行ってください。 バッチモードの起動オプションに -ignoreCompilerErrors を追加。 導入したパッケージに依存する .asmdef の Define Constraints に NUGET_PACKAGE_READY を追加。 導入したパッケージに依存するコードを以下のようにプリプロセッサディレクディブで囲う。 #if NUGET_PACKAGE_READY // your code #endif Unityでの使い方 メニューアイテム Manage packages ・・・ パッケージを管理するメインウィンドウを表示する。 Repair packages ・・・ インストールされていないパッケージを修復する。 Delete cache ・・・ キャッシュを削除する。（ただし、アセンブリがロードされるたびにキャッシュは消える。） Clean up this plugin ・・・ パッケージを全削除し、このプラグインを初期化する。 NuGet importer settings ・・・ NuGet importer に関する設定をするウィンドウを表示する。 Check update ・・・ 更新があるか確認する。 Go to project page ・・・ NuGet importer for Unity の Web ページを開く。 メインウィンドウ NuGet から検索するときのモード。 インストールされているものから検索するときのモード。 非安定版も含めるかどうか。 検索語句の入力場所。（インクリメンタルサーチされる。） 検索結果。 パッケージの詳細情報。 バージョン選択。 パッケージに対する操作。 無視するパッケージか。 NuGet importer の設定 インストール先を指定する。（UPMを推奨。） 依存関係のバージョン決定方法を指定する。（Suitを推奨。） 起動時にパッケージがインストールされているか確認するか。パッケージのディレクトリが存在すればインストール済みと判断。インストールされていないパッケージを見つけた場合、自動的に修復する。（オンを推奨。） 検索結果のキャッシュする最大数。（0以下はキャッシュしない。） カタログのキャッシュする最大数。（0以下はキャッシュしない。） アイコンのキャッシュする最大数。（0以下はキャッシュしない。） Roslyn Analyzerに対しAssembly Defintion fileを生成するか。Assembly Definition fileにより解析範囲を指定可能。 通信のデータ量を少なくするモードか。オンの場合、インストールされていないパッケージの画像が取得されなくなり、入力が落ち着くまでパッケージ検索が行われなくなります。 通信失敗時に再度通信を試みる最大数。 通信のタイムアウトとする秒数。 無視するパッケージ一覧。Addでパッケージ追加。Removeで最後尾のパッケージ削除。 注意点 実行時に必要なファイル以外（例：ルールセットやドキュメントなど）は (your project)/NuGet 以下に配置されます。参照する際は手動で追加してください。 このパッケージを導入する際、以下の変更を加えます。 PlayerSettings -> assemblyVersionValidation をオフに。（NuGet と同様にアセンブリ参照のバージョンの同一性をチェックしなくさせるため。） System.IO.Compression.FileSystem.dll を参照に追加。（NuGet importer for Unity が Zip ファイルを扱うため。）"
  },
  "index.html": {
    "href": "index.html",
    "title": "English | NuGet importer for Unity documentation",
    "keywords": "English Welcome to NuGet importer for Unity \"NuGet importer for Unity\" is a fast, easy-to-use, and powerful editor extension that provides you to import NuGet packages into Unity. This package also fully supports native plugins. (This was inspired by GlitchEnzo/NuGetForUnity, but made from scratch.) 日本語はこちら。 Usage For information on how to install and use this package, please see [usage].(documentation/usage.html). Environment Version 4 series works with Unity2020.3 or later, but compile errors occur once with Unity2020.3 due to Unity's compile pipline issues. To use NuGet importer for Unity, you restart Unity and open with ignore the compile error. If you are using an earlier version of Unity, use version 3.3.2. Version 3 series and below works with Unity2020 and later. This even works with Unity2019, but it is not recommended due to some specification issues. API The API documentation is available here. Contributing We welcome any contributions (bug reports, desired features). If you wish to contribute, be sure to review our Contribution guide License This package is under Apache License 2.0. Each package in NuGet is governed by the terms included with the package. For more details, see NuGet F&Q. Author kumaS (If I cannot use this name because it is used, add -nu as a tag.) Twitter 日本語 Welcome to NuGet importer for Unity NuGet importer for Unity は高速で使いやすく、非常に強力に NuGet のパッケージを Unity へ導入できるようにするエディタ拡張です。 また、ネイティブプラグインに対しても完全に対応しております。 （GlitchEnzo/NuGetForUnity に影響を受けましたが一から作ってます。） 使い方 このパッケージの導入法や使い方に関しては、使い方をご覧ください。 動作環境 バージョン4系はUnity2020.3以降であれば動作します。しかし、Unity2020.3では仕様上の問題より一度コンパイルエラーが発生します。 Unityを再起動しコンパイルエラーを無視して開けば動作するようになります。それ以前のUnityであればバージョン3.3.2を使用してください。 バージョン3系以下はUnity2020以降であれば動きます。Unity2019でも動作しますが、仕様上の問題より推奨しません。 API APIのドキュメントはこちらにあります。ご活用ください。 コントリビュート どんなコントリビュート（バグ報告やほしい機能）でもしていただけるとありがたいです。具体的なやり方はコントリビューションガイドをご覧ください。 ライセンス これについては、Apache License 2.0 です。 NuGet のパッケージについてはそれぞれのライセンスに従います。詳細は NuGet の F&Q をご覧ください。 製作者 kumaS (名前が被って使えないときはタグとして -nu をつけてる。) Twitter"
  }
}